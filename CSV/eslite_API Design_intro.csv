ISBN,書籍簡介
9781617295850,"API Design Patterns lays out a set of design principles for building internal and public-facing APIs. Summary A collection of best practices and design standards for web and internal APIs. In API Design Patterns you will learn:  Guiding principles for API patterns Fundamentals of resource layout and naming Handling data types for any programming language Standard methods that ensure predictability Field masks for targeted partial updates Authentication and validation methods for secure APIs Collective operations for moving, managing, and deleting data Advanced patterns for special interactions and data transformations API Design Patterns reveals best practices for building stable, user-friendly APIs. These design patterns can be applied to solve common API problems and flexibly altered to fit your specific needs. Hands-on examples and relevant use-cases illustrate patterns for API fundamentals, advanced functionalities, and even uncommon scenarios. Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications. About the technology  APIs are contracts that define how applications, services, and components communicate. API design patterns provide a shared set of best practices, specifications and standards that ensure APIs are reliable and simple for other developers to use. This book collects and explains the most important patterns from both the API design community and the experts at Google. About the book  API Design Patterns lays out a set of design principles for building internal and public-facing APIs. Google API expert JJ Geewax presents patterns that ensure your APIs are consistent, scalable, and flexible. You'll improve the design of the most common APIs, plus discover techniques for tricky edge cases. Precise illustrations, relevant examples, and detailed scenarios make every pattern clear and easy to understand. What's inside  Guiding principles for API patterns Fundamentals of resource layout and naming Advanced patterns for special interactions and data transformations A detailed case-study on building an API and adding features  About the reader  For developers building web and internal APIs in any language. About the author  JJ Geewax is a software engineer at Google, focusing on Google Cloud Platform, API design, and real-time payment systems. He is also the author of Manning's Google Cloud Platform in Action. Table of Contents PART 1 INTRODUCTION 1 Introduction to APIs 2 Introduction to API design patterns PART 2 DESIGN PRINCIPLES 3 Naming 4 Resource scope and hierarchy 5 Data types and defaults PART 3 FUNDAMENTALS 6 Resource identification 7 Standard methods 8 Partial updates and retrievals 9 Custom methods 10 Long-running operations 11 Rerunnable jobs PART 4 RESOURCE RELATIONSHIPS 12 Singleton sub-resources 13 Cross references 14 Association resources 15 Add and remove custom methods 16 Polymorphism PART 5 COLLECTIVE OPERATIONS 17 Copy and move 18 Batch operations 19 Criteria-based deletion 20 Anonymous writes 21 Pagination 22 Filtering 23 Importing and exporting PART 6 SAFETY AND SECURITY 24 Versioning and compatibility 25 Soft deletion 26 Request deduplication 27 Request validation 28 Resource revisions 29 Request retrial 30 Request authentication"
9781514735169,"Looking for Best Practices for RESTful APIs?This book is for you  Why? Because this book is packed with practical experience on what works best for RESTful API Design. You want to design APIs like a Pro? Use API description languages to both design APIs and develop APIs efficiently. The book introduces the two most common API description languages RAML, OpenAPI, and Swagger. Your company cares about its customers? Learn API product management with a customer-centric design and development approach for APIs. Learn how to manage APIs as a product and how to follow an API-first approach. Build APIs your customers love  You want to manage the complete API lifecycle? An API development methodology is proposed to guide you through the lifecycle: API inception, API design, API development, API publication, API evolution, and maintenance. You want to build APIs right? This book shows best practices for REST design, such as the correct use of resources, URIs, representations, content types, data formats, parameters, HTTP status codes, and HTTP methods. Your APIs connect to legacy systems? The book shows best practices for connecting APIs to existing backend systems. Your APIs connect to a mesh of microservices? The book shows the principles for designing APIs for scalable, autonomous microservices. You expect lots of traffic on your API? The book shows you how to achieve high performance, availability and maintainability. You want to build APIs that last for decades? We study API versioning, API evolution, backward- and forward-compatibility and show API design patterns for versioning. The API-University Series is a modular series of books on API-related topics. Each book focuses on a particular API topic, so you can select the topics within APIs, which are relevant for you."
9781364989002,0
9781449310509,"In today's market, where rival web services compete for attention, a well-designed REST API is a must-have feature. This concise book presents a set of API design rules, drawn primarily from best practices that stick close to the Web's REST architectural style. Along with rules for URI design and HTTP use, you'll learn guidelines for media types and representational forms.REST APIs are ubiquitous, but few of them follow a consistent design methodology. Using these simple rules, you will design web service APIs that adhere to recognized web standards. To assist you, author Mark Mass  introduces the Web Resource Modeling Language (WRML), a conceptual framework he created for the design and implementation of REST APIs.Learn design rules for addressing resources with URIsApply design principles to HTTP's request methods and response status codesWork with guidelines for conveying metadata through HTTP headers and media typesGet design tips to address the needs of client programs, including the special needs of browser-based JavaScript clientsUnderstand why REST APIs should be designed and configured, not coded"
9781430209737,"Jaroslav Tulach is the founder and initial architect of NetBeans, later acquired by Sun Technologies. As creator of the technology behind NetBeans, he is still with the project to find ways to improve the design skills among all the programmers who contribute to the success of NetBeans open source project."
9789864344376,使用AWS雲端元件來設計、建立、部署應用程式 Amazon Web Services（AWS）是現今最熱門、使用最廣泛的雲端服務平台。只要將應用程式部署在AWS平台上，就能讓應用程式擁有絕佳的彈性與強健性。本書會帶領你了解雲端開發的基本概念，然後以AWS雲端服務來探討解決方案，幫助你一口氣解決根本的問題。 本書不僅是建置高效雲端應用程式的方法與注意事項，更是全面利用AWS的指南。首先，我們會說明AWS的重要觀念，並申請AWS帳號來開始使用。本書內容介紹了雲端服務模式，幫助你在AWS平台上，建立出具備可高度擴展與安全性的應用程式。接著，我們會深入介紹雲端運算概念，例如：S3儲存服務、RDS與EC2等。然後，本書將會引導你逐步了解VPC，建立即時無伺服器環境，並且使用微型服務部署無伺服器API介面。最後，本書會教導你如何監控應用程式、自動化基礎設施以及利用AWS CloudFormation佈署。 閱讀完本書後，你將能夠精通AWS雲端服務所提供的各項服務，並利用AWS基礎設施來加速開發流程。 【適用讀者】 本書適合剛接觸到AWS的開發者、工程師以及架構設計師。若是你已有設計與建立內部部署應用程式的經驗，而現在正在思考如何搬遷或重構應用程式至雲端的話，則本書將會對你有很大的幫助。閱讀本書時，你需要對Java與Python程式語言擁有一定程度的能力。 【你能夠從本書學習到】 ◎建立AWS帳號，並且了解AWS的基本概念。 ◎了解AWS的專有名詞以及如何管理存取權限。 ◎了解運算、ELB、VPC等雲端功能的重要元素。 ◎了解AWS雲端服務中與資料庫相關的服務後，學習如何備份資料庫，並同時確保高可用性。 ◎將AWS雲端服務與你的應用程式整合，以達成並超越非功能性需求。 ◎建立及自動化基礎設施，以設計出經濟實惠、高可用性的應用程式。
9789863759072,HTML 5 是全球資訊網（World Wide Web）的核心語言中最新也最棒的版本，最令人激賞的部分在於它規範了多媒體在瀏覽器中的使用方式，網站不再需要依靠Flash 或 Silverlight 等第三方工具就能播放視訊和音頻。本書主要目的在於用簡單的文字，說明透過 HTML 5 多媒體元素將聲音和影像檔加入網站的完整編碼方式，除此之外，也將告訴你如何用 CSS 3 設計 HTML 5 的各種媒體元素，建立屬於自己的媒體控制選項。透過本書，你將學到：1. 利用 HTML 5 將多媒體元素嵌入到網頁文件中，並在各種瀏覽器中都能完整呈現。2. 透過 JavaScript API 轉入自製的多媒體控制項。3. 用 CSS 3 設計多媒體的各種元素。4. 透過 SVG 和 canvas 元素達成更多的影片特殊效果。
9789864763245,有了本書，讓您一次學會網頁程式設計的關鍵技術：●HTML5的元素和各種表單輸入類型，加碼示範表單的後端處理。●CSS3的Box Model、定位方式和常用屬性。●JavaScript的核心語法和瀏覽器端的應用，讓靜態網頁具有動態效果，包括DOM、JavaScript內建物件、事件處理、實用範例等，加碼示範透過JavaScript和Google Maps API將Google地圖整合至自己的網站。●jQuery的核心語法、事件、特效和常用函式，讓網頁設計更便利快速。●jQuery UI的常用元件和佈景主題，讓網頁設計更專業美觀。●Ajax技術在背景非同步下載更新的資料，加碼示範透過Ajax存取「政府資料開放平台」的資料集 (例如空氣品質預報、氣象預報、就業、觀光等)。●回應式網頁設計 (RWD，Responsive Web Design)，以根據瀏覽器環境自動調整網頁的版面配置，讓網頁完整呈現在PC、平板、手機等裝置。
