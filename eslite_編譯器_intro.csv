ISBN,書籍簡介
9789572868706,0
9789572868720,0
9789865023386,從新手晉身為C++專家 使用新的C++17學習如何撰寫程式。經由循序漸進的範例引導，你將從菜鳥蛻變成為專業的C++程式設計師。透過本書和最新C++17編譯器，可讓你在最短的時間內撰寫出真正的C++程式，即便原本不具備程式設計的相關知識。 所有程式語言概念的表達，皆搭配可執行運作的範例程式做說明，每章最後皆附有相應的習題，用以檢測與練習對本章的學習程度為何。 本書已全部更新為C++17最新版本，適用於所有現行運作的C++。本書同時介紹支援C++17的標準函式庫元素。 你將學會： ‧定義變數和作決策 ‧運作陣列和迴圈、指標和參考及字串 ‧撰寫自已的函數，型態及運算子 ‧探索物件導向程式設計的精要 ‧使用多載、繼承、虛擬函數和同名異式(多型) ‧撰寫泛型函數樣版和類別樣版 ‧學到現代C++的特性：auto型態宣告，移動語意，lambda運算式 ‧檢視C++17新加入的功能
9789863455875,"離散數學為資訊科學中最重要的一門數學課程，其範圍相當廣泛，涵蓋了資訊科學中常用的數學概念，舉凡資料結構、演算法、作業研究、編碼解碼、編譯器理論等等都需要離散數學的背景知識。離散數學主要探討電腦能表示的離散及有限集的特性，常見的範圍包含組合數學、圖論、代數、編碼解碼理論、有限狀態機等五大部份。 　　本書共分成十三章，第一、二、三、四、五及十一章屬於組合數學的範圍，其中第一章基本數學介紹集合論、數學歸納法以及基礎數論，此為往後各章節的基礎。第二章探討各種不同關係與函數的性質，此外也討論鴿籠原理與基數問題。第三章介紹排列組合、排容原理以及離散機率。第四章介紹一個解排列組合或遞迴關係很有用的工具－生成函數。第五章討論如何求解各種不同的遞迴關係式，同時也探討如何用遞迴關係式解一些高等的排列組合問題。第十一章探討Burnside 及Polya 定理，二個組合數學領域的重要定理。 　　第六、七及八章屬於圖論的範圍，其中第六章介紹圖論的一些基本觀念及一些重要的圖論問題如路徑問題、平面圖以及著色理論。第七章介紹一個特別的圖－樹狀結構，探討樹的各種性質及應用。第八章主要討論常見圖論上的演算法及計算複雜度的分析。 　　第九及第十章屬於代數的範圍，其中第九章介紹群、環、整域及體等代數結構的基本性質及應用。第十章討論絡與布林代數的代數結構。第十二章為編碼與解碼，介紹如何獲得最有效率的編碼方式以及相對應的解碼方式。 　　第十三章為有限狀態機結構，討論有限狀態機、自動狀態機、文法及正規表示式。"
9789865031640,本書主要為幫助初學者加深對Verilog語言的特性了解，進而利用它們設計出各種電子消費產品的控制電路等。本書將整個硬體描述語言依其特性與前後順序編寫成七個章節；第一章：介紹整個數位邏輯電路設計的發展過程，第二章：介紹Verilog語言能合成出邏輯電路的各種運算及討論其優先順序，第三章：敘述資料流描述與各種組合電路的設計，第四章：介紹行為模式敘述與各種序向電路的設計，第五章：介紹結構化、模組化的元件設計，第六章：介紹編譯器指令的特性與使用方法，第七章：各種控制電路設計的電路與實例。本書適用於科大資工、電子及電機系「硬體描述語言實務(Verilog)」、「Verilog設計實務」課程使用。
9789864768592,"開發人員想要順利完成工作，會引起爭論的問題越少越好，使用Kotlin撰寫程式意味著可以減少爭論問題的發生。Kotlin提供富有表達性的語法，強大的直覺型態系統，大量的工具支援，以及與現有Java程式碼、函式庫和框架的無縫接軌。Kotlin可以編譯為Java程式碼，在任何Java環境平台都能使用它，也包括了Android。透過有效率的編譯器和小型標準函式庫，Kotlin幾乎不會於執行時期產生額外成本。本書教你運用Kotlin語言撰寫出高品質的應用程式，適合有經驗的Java的開發人員。內容提供豐富的程式範例，以及有趣的主題，例如使用自然語言語法建置DSL。作者是Kotlin的核心開發人員，因此你可以相信，即便是敘述細節也是相當準確的。本書內容包含●JVM上的功能性程式設計●撰寫簡潔和慣用的程式碼●結合Kotlin和Java●特定域語言本書適合有經驗的Java的開發人員。「闡述高階概念，並提供所有必要的細節。」－－節錄自Kotlin首席設計師Andrey Breslav的推薦序「如同Manning in Action系列風格，本書提供快速提高生產力所需的一切。」－－Kevin Orr, Sumus Solutions「透過這本書的指導，Kotlin變得饒富趣味且容易學習！」－－Info.nl的Filip Pravica「非常徹底，寫得很好，而且容易懂。」－－Jason Lee, NetSuite"
9789864768080,本書第一版榮獲國家圖書館民國100年狀元推薦閱讀書單科學類第15名，也是唯二進榜的程式設計書籍！●作者累積二十年教學與著作經驗完成，書的章節架構採循序漸進、難易適中，內容說明簡單扼要。●針對大專院校教學進度編寫，適合作學習C++程式語言的教材，內容由淺入深、由簡而繁的方式帶領讀者學習C++的基本程式設計、結構化程式設計、物件導向程式設計、與應用程式設計。●本書所有的語法、範例與程式都是使用ANSI/ISO C++的標準，同時也兼顧到Visual C++的相容性，因此本書所有範例程式皆使用Orwell Dev-C++ 5.11 with GCC 4.9.2與Visual C++ 2017編譯器編譯、連結與執行過。●第三版更新至適用Windows 10系統，且所有範例程式皆在64 bits Windows系統中編譯。
9789864766314,「做好準備，盡情開發進攻與防禦性C#。」－－ Microsoft MVP／Matt Graeber學習使用C#強大的核心程式庫將沉悶但重要的工作自動化，例如fuzz、執行漏洞掃瞄與分析惡意軟體。藉由Mono的協助，你將會編寫實際的安全工具，並且讓它們在Windows、OS X、Linux，甚至行動裝置上運行。上過C#速成班並瞭解它的進階功能之後，你將學會如何：● 使用HTTP與XML程式庫編寫fuzzer，掃瞄SQL與XSS攻擊● 用Metasploit生成shellcode，建立跨平台且跨結構的指令內容● 將Nessus、OpenVAS與sqlmap自動化，掃瞄漏洞與進行SQL攻擊● 編寫供OS X與Linux使用的.NET反編譯器● 解析與讀取離線的登錄檔註冊單元，輸出系統資訊● 使用安全工具Arachni與Metasploit的MSGPACK RPC將它們自動化充分利用C#豐富強大的工具與Gray Hat C#的程式庫簡化你的日常工作。
9789571190358,《微處理器原理與應用：C語言與PIC18微控制器》的內容以介紹微處理器相關的知識概念與使用方法為主要目標，配合使用Microchip PIC18系列微控制器作為微處理器各個硬體與功能的說明對象，並使用Microchip MPLAB X IDE及XC8編譯器以C程式語言作為程式撰寫的工具。本書適合自修學習微處理器進階應用，也適合作為教授微處理器進階課程的輔助教材。為了讓讀者能更進一步地實際驗證並了解微處理器各個硬體的使用與結果，各個章節提供的範例程式都可以完整地在輔助實驗電路板上呈現正確的執行結果。本書所使用的PIC18F4520微控制器是八位元微處理器中的標準基本微處理器，此微處理器具備有相當完整豐富的功能，非常適合作為學習微處理器的對象。由於PIC18系列微控制器的高度相容性，本書所有的內容與範例程式也都能夠適用於其他PIC18系列微控制器，同時也可以將相關的學習心得應用到其他種類的微處理器。而XC8編譯器則是Microchip所開發的高效率C語言程式編譯工具，相對於組合語言，利用C程式語言開發複雜程式的應用可以有效減少時程並減少錯誤發生。
9789864760534,●打造C++程式語言的堅實基礎，內容不僅涵蓋最基本的語法，也深入探討物件導向的主要精神。●本書範例程式全部經過最新的 C++編譯器測試，包括：Microsoft Visual C++ Community 2015， Dev-C++ 5.11，以及 Borland C++ Compiler 5.5.1。●本書深度廣度兼備，提供了極佳的學習步調，和連貫的先後次序，敘述方式主軸明顯，讀者不會被枝節所擾而混淆了學習主軸，相當適合C++語言的初學者。初學者也會在閱讀的過程中，培養出良好的程式風格、模組（module）切割方式…等實用的常識。●提供近兩百個完整的範例程式，可以幫助觀念的理解。程式範例中的重點都使用粗體字（bold）標示，方便閱讀。而且這些程式都經由作者實際編譯測試過。●各章份量均勻，大致都在30頁左右，不僅適合自我學習的讀者規劃學習進度，更符合老師的教學安排。●各每章末提供「常犯錯誤」、「重點整理」、「習題」讓讀者加以複習，並自我評量學習成效。文章中也會適當地穿插「提示」和「討論」，做為學習時的指引。●書的最後附上數個極具參考價值的附錄，並提供編排良好的索引（index），讓本書具有參考查詢的功能。
9789572191699,本書循序漸進介紹美國ALTERA公司之Max+plusII軟體的使用與數位電路之設計方法。本書主要內容包括Max+plusII編譯器的使用、組合邏輯電路設計、算術邏輯電路設計、順序邏輯電路設計、計數器設計、移位暫存器設計、綜合應用、元件燒錄。內容豐富且有詳細的操作方式與解說。
9789572192351,本書以C語言並配合附贈的16F883單晶片及Layout完成的PCB板來做實驗，並詳細介紹如何使用由mikroElektronika所開發的MikroC編譯器，MikroC提供了高階語言的環境，不但支援ANSIC標準，更有著許多的函數庫，提供了使用上的便利性。本書內容由淺入深，並藉由簡單的實驗來達到從做中學習的目的，包含：輸出/輸入練習、中斷練習、計時/計數練習、PWM / EEPROM練習、類比/數位轉換器練習、串列傳輸練習。本書適用於科大電子、電機系三、四年級「單晶片實習」課程及想學習單晶片的初學者使用。
9789572187623,本書主要介紹如何使用verilog語言來撰寫程式，進而利用它們設計出各種消費產品的控制電路…等，讓初學者對程式語言有足夠的了解。我們將整個硬體描述語言依其特性與前後順序共分成七個章節：第一章介紹整個數位邏輯電路設計的發展過程，第二章說明verilog語言的程式結構並以範例讓讀者了解其內部各個單元的特性，第三章介紹verilog語言可以合成出邏輯電路的各種運算及討論其優先順序，第四章敘述資料流描述與各種組合電路的設計，第五章介紹行為模式敘述與各種序向電路的設計，第六章介紹結構化、模組化的元件設計，第七章介紹編譯器指令的特性與使用方法及討論如何建立元件庫與叫用，可使我們依不同的工作環境選取程式進行編譯。本書適用於科大電子、電機及資工系「數位邏輯設計」課程使用。
9789572186152,本書內容係依照Visual Fortran在工程計算上的應用所設計，可引領使用者快速跨入視窗世界，瞭解視窗訊息、功能表、工具列等之設計技巧。财本書以使用Compaq Visual Fortran的32位元編譯器進行處理，可配合Windows環境，提供穩定的程式開發工具。财本書附贈範例光碟乙片，豐富且詳盡提供示範案例，可充分掌握視窗程式開發的精要。
9789862763391,開發大型C++軟體系統不只需要了解邏輯設計知識，為了專案成功，您更需要掌握實體設計的觀念，它是開發過程的技術面向，很多資深的軟體開發工程師都不一定很有這方面的經驗。坊間書籍大多是探討邏輯設計，鮮少述及實體設計。 本書是需要大量專業C++開發工作如資料庫、作業系統、編譯器以及軟體框架的權威書籍，它也是教導如何開發大型系統的第一本書，更是少數幾本由C++程式語言的實際面來探討物件導向設計的其中之一。 在本書中，Lakos先生將傳授將大型系統拆解成由小型、易於維護的軟體元件所構成的實體(不是繼承)架構。系統本身如果不具有環形實體相依性，對它維護、測試與重複利用會比對相互緊密相依的系統容易且經濟。除了闡述好的實體設計就像好的邏輯設計一樣重要之外，作者也提供一系列技巧用以消除環形、編譯時期與連結時期相依關係。作者接著會延伸這些觀念到非常非常大型的系統，而在本書後段將探討單一元件設計常見的top-down方式。 本書附錄A收錄了一個非常有價值的設計範式:“Protocol Hierarchy”，用來避免產生過胖的介面，同時將實體相依關係最小化。附錄B則是實作一個ANSI C相容的C++程序介面，附錄C介紹一組UNIX下的工具，用以萃取與分析實體相依性，最後，附錄D整理本書介紹的所有設計規則、設計指南以及原理，以便讓您快速參考。 John Lakos先生曾任職於Mentor Graphics(明導國際)，它是一家撰寫過無數大型C++程式的公司，也是第一家嘗試完全採用C++來進行大型軟體開發的公司。Lakos先生在1987年就已經是C++開發的專家，並在1990開始於哥倫比亞大學開設物件導向程式設計的研究所課程。  
