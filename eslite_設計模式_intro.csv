ISBN,書籍簡介
9789863473343,關於手機應用程式的介面模式當你有時間壓力，要設計出好用、容易瀏覽的行動應用程式時，沒時間一切從頭開始，這本言簡意賅的書提供超過 90 個行動應用程式設計模式的實用參考，這些模式用一千張來自 iOS、Android 和 Windows Phone 應用程式的畫面截圖說明。從本書第一版出版後起行動裝置產生了很大的變化，各家系統的差異愈來愈大，形成各自的設計常規和模式，很多設計師愈來愈能擁抱以行動為中心的設計思考，在這一版中，使用者經驗設計專家 Theresa Neil 將帶領產品經理、設計師和開發者看過 11 個類別的設計模式：●導覽：取得主要和次要導覽模式●表單：打破業界在表單設計上的壞習慣●表格：只顯示最重要的資訊●查詢、排序和篩選：讓這些功能容易使用●工具：創造直接互動的幻覺●圖表：學習基本圖表設計的最佳慣例●教學和邀請：邀請使用者開始使用並發現功能●社群：幫助使用者互相連接、成為團體中的一份子●回饋和預設用途：提供使用者即時回饋●協助：把協助頁面整合到應用程式裡●反面模式：設計行動應用程式時要避免的事
9789865501068,本書特色 ►本書通俗易懂、妙趣橫生 ►生活經歷、融入設計模式 ►心中無模式卻處處有模式 ►邁向程式碼重構與簡潔之道 內容簡介 這是一本通俗易懂、妙趣橫生的設計模式書籍，作者將帶領讀者進入物件導向程式設計的禪道三重境界。 ►一重境界：依葫蘆畫瓢。這屬於初學階段，以為設計模式只有書中提到的那幾種，能把模式名稱倒背如流，但真正要用時，還得去翻書，依據類別圖照搬照改。 ►二重境界：靈活運用。這屬於中級階段，即對每一種設計模式都非常熟悉，有較深入的思考，而且能夠根據實際的業務場景選擇合適的模式，並對相應的模式進行恰當的修改以符合實際需求。 ►三重境界：心中無模式。這算最終階段，這裡說無模式並非不使用設計模式，而是設計模式的理念已經融入使用者的靈魂和血液，已經不在乎具體使用哪種通用模式了，但寫出的每一個程式碼都遵循設計的原則，能靈活地創造和使用新的模式（這種模式使用者自己可能也不知道該叫什麼）。這就是所謂的心中無模式卻處處有模式。 全書分為3篇： ■「基礎篇」 講解23種經典設計模式，其中19種常用設計模式分別用單獨的章節講解，其餘設計模式放在一章中講解。 ■「進階篇」 講解由基礎設計模式衍生出的各種程式設計機制，包括篩檢程式模式、物件集區技術、回檔機制和MVC模式，它們在各大程式設計語言中都非常重要而且常見。 ■「經驗篇」 結合工作經驗和專案積累，分享對設計模式、設計原則、專案重構的理解和看法。 適合讀者群：互聯網軟體開發者、有一定程式設計基礎的IT職場新人、對設計模式和程式設計思維感興趣者。
9789864344277,包容性強的網站將為更多人帶來完善的使用者體驗！ 包容性網頁UI/UX設計模式可讓你的網站親和性UPUP！ 以包容性設計模式的角度來思考網頁的親和性及可用性體驗，剖析如何獲得更多人造訪及使用的祕密！ 當設計師製作出包容性及親和性差的網站及應用程式時，這並非是缺乏網頁製作技能或才華的緣故，而是因為沒有掌握好網頁設計的正確方式。而所謂的「包容性網頁設計」是指製作出可讓「所有人」訪問及使用的網頁，也就是說，設計師要從「包容性」的角度來思考，才能真正打造出完美的使用者體驗。 「以人為本的包容性設計」便是本書的精神所在。本書作者是一位包容性設計師，他以「包容性」的角度來研究常見的介面模式，可幫助你快速了解如何運用及重複運用包容性設計，從而為你帶來更廣泛、更忠實的客群。當了解如何製作親和性網頁時，將可使你成為更出色的網頁開發者。不論是網頁設計師、前端開發人員、測試工程師，皆可從本書中獲得啟發。 你能夠從本書中學習到： ★親和性的神話和誤解以及常見的解決方案和經驗法則。 ★可立即使用經過良好測試、可訪問的HTML/CSS元件。 ★如何正確使用WAI-ARIA的role屬性和網頁內容親和性指南（WCAG）。 ★如何解決響應式網頁設計（RWD）中常見的親和性問題。 ★如何處理跳過連結和外部連結以及導覽區域和地標。 ★如何保持標籤、按鈕、目錄、動態小工具和頁籤介面的可訪問性。 ★如何無障礙地實現無限捲動、網格顯示和動態內容。 ★如何處理密碼驗證、錯誤訊息、網頁表單、JavaScript模式和觸控目標。 ★如何保持舊版瀏覽器中的介面可訪問性。 ★如何在設計原型時考慮到親和性。
9789864344352,☝ 博碩嚴選！遊戲程式設計師人手一本不敗經典之作！ ☝ 首版上市累積銷售數千本！ ☝ 好評再上市，回饋發行中！ 寫遊戲的首要之務就是要先有「好的設計」，否則哪能寫出可應對玩家、測試、企劃頻繁出現的新需求呢？那麼，怎樣才算是好的設計呢？除了掌握物件導向的設計原則外，直接在適當的場合套用適當的設計模式，自然是一條捷徑。 GoF提出了23個模式，想要一次全都套用並非易事，不過，對於實質參與過或規畫過數十萬行以上的遊戲程式的人而言，不套用才奇怪！的確，很難想像，在一個簡單的專案中也能把GoF的23個模式都套用進去，但這本書幾乎做到了！關鍵在於作者的「遊戲開發經驗」。 本書作者不但是實質參與大型遊戲開發的人，甚至本身負責的就是遊戲的軟體規劃，負責過的知名遊戲不勝枚舉，這些經驗，使得作者很清楚哪些模式可以套用在遊戲的哪個地方，或者反過來說，作者很清楚遊戲的哪類型功能應該套用哪個模式最為恰當。擁有這種能力的人當然不只一個，但願意把這些經驗濃縮設計出一個簡單的「P級陣地」遊戲並撰寫《設計模式與遊戲開發的完美結合》這本書來分享經驗者，蔡昇達堪稱是台灣遊戲界的第一人，甚至在整個台灣軟體業界，都很罕見。 這本書的重點顯見於書名之中，著重在「設計模式」與「遊戲開發」，且兩者的重要性不相上下。作者撰寫本書的目的主要有二。 首先，這本書是寫給遊戲程式設計師的，作者蔡昇達在遊戲設計業界累積了十年經驗，參與過無數耳熟能詳的專案（詳見下方..本書讚譽..），正所謂「十年磨一劍」，雖然動手完成這本書僅僅花費一年，但背後代表的是十年經驗的積累。 本書作者希望所有的遊戲程式設計師能將工作重點，從「Coding」提升到「設計」的層次，藉由套用「設計模式」與多項物件導向設計原則，設計出可長可久的遊戲，不畏懼、甚至歡迎企劃、測試與使用者回饋帶來的修改需求與新需求。 其次，本書也是寫給那些想要學習「設計模式」但不會寫遊戲的工程師閱讀的，本書採用的遊戲設計工具為Unity3D與C#，所使用的語法都是最簡單的，介面也是最容易上手的。至於遊戲部分，筆者挑選的是最常見、最淺顯易懂的範例，所有與本書遊戲相關的Domain Know-how，都難不倒任何一位曾經「玩過」戰鬥遊戲的軟體工程師。這樣做的目的在於，藉由遊戲做為範例，實際示範「設計模式」的強大之處。事實上，本書原本的另一個候選書名為《設計模式解析——以遊戲為例》。 本書不同於其他講解「設計模式」的書籍，本書的所有範例都圍繞著同一個遊戲專案，並且將GoF的所有模式都套用到了該遊戲專案之中，光是這一點就很不容易，尤其是，本書還仔細思考過讀者的學習步伐，章節的安排讓讀者能夠循序漸進地學會所有的設計模式。讀者若在閱讀GoF的《設計模式》時，遇到無法理解的部分，也可將本書當作範例解析的參考書來使用。 本書對於工程師而言，是一本非常容易閱讀的書籍，因為本書所有關於「設計模式」的章節架構、內容次序的安排都是相同的，步驟如下： 1 土法煉鋼完成遊戲需求。 2 簡介可以採用的「設計模式」，包含使用生活實例來解釋GoF對於該模式的定義。 3 使用該「設計模式」重構或重新設計程式，以完成遊戲需求。 4 搭配團隊對話的手法，討論日後遇到需求變化時，如何善用該「設計模式」的強大之處，以簡單的調整方式來進行維護。 5 討論該「設計模式」還能與哪些「設計模式」配合，以及採用該「設計模式」的優缺點。 6 最後則是討論該「設計模式」還能應用在遊戲設計的哪個環節。 本書作者認為，透過上述步驟來學習「設計模式」與「遊戲開發」，是最能徹底明瞭「設計模式」與「遊戲開發」的學習方式。同時，本書還獲得了遊戲業界及軟體設計界的許多讚賞，因此，我們將之列為《中文原創經典》。 ~~~~~~~本書讚譽~~~~~~ 本書作者經由十年的遊戲開發過程中，將設計模式理論巧妙地融合到實務之中，為讓讀者能更容易地了解如何運用此理論，書中透過一個遊戲的實作貫穿全書，呈現出設計模式的完整樣貌，且以淺顯易懂的比喻來解譯難以理解的設計模式，透過這些相信能夠讓想更深入了解此領域的讀者更容易上手，推薦給有興趣從事遊戲開發的朋友們。 軒轅劍之父——蔡明宏 暱稱『阿達』的蔡昇達先生，在台灣遊戲研發領域中，是位堪稱天才的程式設計師，我在擔任『仙劍Online』製作人期間，他是我對專案推展最大的信心來源。阿達在經歷過大型連網遊戲研發與營運過程洗禮後，升任為技術中心主管，並參與多款網頁遊戲與手機遊戲開發，充份展現他多元技術能力。在本書中，阿達除了傳達程式技術，更將他的實務經驗化為情境式範例，相信對遊戲設計有興趣的讀者，一定能獲益良多！ 資深遊戲製作人——李佳澤 一個充滿技術涵養的作品，有別於其他的遊戲開發叢書，採用了整合式的專案教學，即一個專案包含了所有作者想要傳承的經驗，同時也能讓讀者學習到整個遊戲開發的過程，非常適合走在程式設計師之路的開發者，作者以其深厚的開發經驗深入探討程式設計師該有的GoF開發思維，是一本無論遊戲開發或專案開發都值得蒐藏的作品。 Unity官方產品技術佈道師 ——Kelvin Lo 《設計模式與遊戲開發的完美結合》將軟體的基本道理做了一個總整理，並且利用一個遊戲的範例來應用23個設計模式，這在設計模式的書籍中是較為少見的，作者企圖將軟體設計的領域擴展到所有與軟體有關的產業中，相當令人激賞！ 信仁軟體設計創辦人——賴信仁 本書不僅榮登博碩文化《中文原創經典》系列，事實上，正是有了這本書才開始有了《中文原創經典》這個系列，換句話說，本書是《中文原創經典》當中，第一本由台灣工程師撰寫的書籍！ 博碩文化《名家名著》、《中文原創經典》總編輯——陳錦輝 本書程式碼的GitHub下載點如下： https://github.com/sttsai/PBaseDefense_Unity3D 本書網站：（提供書中較大的UML原圖） http://gameworker.pixnet.net/blog
9789864765805,探索.NET設計模式，將各種適合模式所提供的好處，帶入您的設計工具模組之中懂得設計模式可幫助開發者改進程式基準，促使程式碼的再利用，並使設計更加強固。本書聚焦於.NET程式設計的實務層面，您會學習一些被廣泛使用的設計模式及應用。由古典的物件導向程式設計(OOP)技巧開始，評估平行設計與並行模型，經由混合OOP及函數式程式設計來加強實作，最後達到協同使用函數式程式設計與OOP寫出更好的程式碼的反應式程式設計模型。 透過本書為您展示如何處理架構╱設計技巧GoF模式，及其他目錄的相關模式與反應式程式設計技巧。在讀完本書之後，您將可以在程式中運用這些設計模式：工廠模式(factory pattern)、建造者模式(builder pattern)、轉接器模式(adapter pattern)、表象模式(façade pattern)、裝飾模式(decorator pattern)、觀察者模式(observer pattern)及其他。也可以在.NET中運用並行與平行處理，撰寫流暢的函數式程式碼。您會學到以下技術：●以正確的觀點看待模式與模式目錄●在C#╱.NET軟體開發中套用模式●在實際開發情境中使用GoF及其他模式●增進您的設計字彙與充分表達您的設計想法●混合OOP與FP以善用物件(object)╱函數式(functional)程式設計●利用Rx及RxJs了解反應式程式模型(reactive programming model)●利用C# LINQ建構(constructs)組合的程式碼●能夠使用.Net慣用語法實作並行╱平行程式設計技巧●使用命令式、函數式與反應式的程式碼創作組合程式，使程式碼具可讀性並可維護
9789864342044,「設計模式」一詞起源於建築設計，目的是為了解決工程中重複出現的各種問題，之後被這個概念被導入軟體工程之中。其中最為人熟悉的是GoF整理的23種設計模式，本書對此做了簡單扼要的介紹，並輔以輕鬆愉快的範例幫助讀者在短時間內了解這些模式要解決的問題與實際應用。隨著程式語言的發展，其中有些模式被使用的頻率已經不高或是已經被內化為語言特定，但其核心思想仍然是十分值得我們學習。本書規畫了七天的讀書計劃，使讀者能夠更方便的安排自己的進修課程。這七天，可以是連續的七天，也可以是七個星期假日，總之讀者都可以自由運用。唯有不斷的鞭策和砥礪自己，才容易持續提升自己的技術。你能夠從本書學到‧設計模式的基礎概念。‧物件導向程式設計的基本原則SOLID。‧Gof的23個設計模式所要表達的概念及基礎用法。‧相似模式的異同與應用。‧單元測試工具JUnit的安裝與簡易教學。適用讀者‧想要快速掌握設計模式重點的人。 ‧已有物件導向基礎，想要了解設計模式的人。‧買了很多設計模式相關書籍，卻始終沒有看完的人。‧想要在寫程式時不知不覺就用上了設計模式，讓設計模式自然融入程式碼的人。
9789864341894,學習設計模式的人，一定聽過《Design Patterns: Elements of Reusable Object-Oriented Software》這本書，俗稱GoF的《設計模式》或GoF的23個設計模式。早期就開始學習設計模式的前輩也大多讀過那本書。GoF的設計模式只有23個嗎？其實不只23個，在該書出版之時，有接近半打的模式未能被放入該書當中，原因有很多，例如在當年尚未取得兩個以上的大型專案實例來驗證可行性、尚未取得四人的共識、與其他模式之間的分界尚不明朗等等，都可能會導致一些模式未被納入。該書的遺珠之憾是那些模式呢？在本書中，作者（GoF的四位成員之一）補充了兩個模式，其中的GENERATION GAP模式已經獲得共識，只是在當年的實例不夠多，但現在看來，實在是稀鬆平常，到處都可以看到開發環境或框架採用了這個模式。至於另一個TYPED MESSAGE模式，在規劃初期是叫做MULTICAST模式，這個模式初期只取得其中三人的同意。藉著這個尚未取得共識的模式，作者揭露了當初在撰寫《Design Patterns: Elements of Reusable Object-Oriented Software》時，四位作者之間對於模式的討論方式，讓讀者得以一窺大師們的討論、思想、以及對軟體設計的習慣。並且在說服反對者的最後關頭，還加入了另一位大師《Clean Code》作者Robert C. Martin（Bob大叔）的支援。如果您仔細閱讀本書第四章及第五章，會發現原來要成為一個新模式真是不簡單啊！那些面世的模式全都是大師們的心血結晶，無價的經驗寶藏。早期，有些人會批評《Design Patterns》不適合作為學習設計模式的第一本書，或許是因為有些人看的、寫的專案不夠多，所以無法體會其中的奧妙。後來，由於設計模式被大多數高級軟體工程師接受了，因此寫了非常多的相關書籍來介紹設計模式，漸漸地，設計模式不再那麼令人敬畏，也成為了軟體設計的顯學。而這類比較容易理解的書籍，通常都是採用最適合初階讀者的寫法，也就是舉出實例來說明模式。而且舉的例子越是程式設計師理解的例子，就越能使程式設計師學會設計模式並加以活用。有些書籍，只針對每個模式舉出一個例子，但無法找出一些好例子，可同時應用多個模式來完成同一個例子中不同的功能要求，這樣的寫作法，常常誤導了讀者，違背了設計模式的目的。換言之，一招半式是要如何走江湖呢？本書有別於那些書籍，在本書第二章中，作者以程式設計師最能理解的檔案系統為例，實際示範如何應用六個模式來解決檔案系統不同的功能需求，這六個模式之間的相互合作方式，讓人眼睛為之一亮。讚嘆道︰「原來設計模式是這樣用的啊！」許多讀者都在期待《設計模式》的第二版，而第二版會是什麼樣子呢？這很難說（也可能不會有第二版了），但至少可以肯定的是，本書作者對於《設計模式》第二版所能做出的貢獻，都已經寫在這本書當中了。
9789864341467,Node.js Design PatternsNode.js 已是相當大型且流行的軟體平台，這個平台使你能夠透過 JavaScript，編寫出具擴展性的伺服端應用程式。因此便可以在前後端皆使用相同的程式語言、建立出高效益的程式碼，同時確保最大程度的可重複利用性、實用性、簡約性以及協同性。本書將引領你認識多種設計構想以及相關的元件，此外也將 Node.js 程式常見的實務問題一一解析，並實作出符合「Node.js 之道」的解決方案。從最基礎的原則及元件開始介紹，接著學習非同步程式設計的精髓，並利用為人所熟知的模式及技巧，開發出可重複利用、極為優雅的程式碼。最終建立出可輕鬆擴展、分散及整合的 Node.js 應用程式。你能夠從本書學習到：●實作一系列的 JavaScript 伺服端設計模式，從中瞭解如何應用這些模式於不同的情境中。●認識 Node.js 基礎元件並發揮它們的最大潛能。●條理化組織各式模組以避免盤根錯節。●有效運用各式解決方案以克服常見的設計及撰寫問題。●輕鬆應對非同步機制的程式設計。●辨認且避免常見的設計謬誤、程式錯誤及反模式。●適用讀者期望深入瞭解 Node.js 應用程式開發的 JavaScript 開發者。
9789864340941,"《設計模式：Android 原始碼解析與應用》一書是關於軟體開發設計模式（Design Patterns）於 Android 原始碼及其應用程式中的探討。本書內容包含各種設計模式的介紹與示範、Android 原始碼中的設計模式實踐、以及如何將設計模式實際活用於 Android 應用程式的開發。

物件導向軟體設計六大原則：單一職責、開閉原則、里氏取代（Liskov Substitution Principle）、依賴倒置、介面隔離、以及迪米特原則（Law of Demeter）。

23 種設計模式：單例模式、Builder 模式、原型模式、工廠方法模式、抽象工廠模式、策略模式、狀態模式、責任鏈模式、直譯器模式、命令模式、觀察者模式、備忘錄模式、迭代器模式、範本方法模式、訪問者模式、中介者模式、代理模式、組合模式、配接器模式、裝飾模式、輕量模式、外觀模式、以及橋接模式。

MVC（Model-View-Controller）和 MVP（Model-View-Presenter）軟體設計架構的說明與實例。"
9789864340835,寫遊戲的首要之務就是要先有「好的設計」，否則哪能寫出可應對玩家、測試、企劃頻繁出現的新需求呢？那麼，怎樣才算是好的設計呢？除了掌握物件導向的設計原則外，直接在適當的場合套用適當的設計模式，自然是一條捷徑。GoF提出了23個模式，想要一次全都套用並非易事，不過，對於實質參與過或規畫過數十萬行以上的遊戲程式的人而言，不套用才奇怪！的確，很難想像，在一個簡單的專案中也能把GoF的23個模式都套用進去，但這本書幾乎做到了！關鍵在於作者的「遊戲開發經驗」。本書作者不但是實質參與大型遊戲開發的人，甚至本身負責的就是遊戲的軟體規劃，負責過的知名遊戲不勝枚舉，這些經驗，使得作者很清楚哪些模式可以套用在遊戲的哪個地方，或者反過來說，作者很清楚遊戲的哪類型功能應該套用哪個模式最為恰當。擁有這種能力的人當然不只一個，但願意把這些經驗濃縮設計出一個簡單的「P級陣地」遊戲並撰寫《設計模式與遊戲開發的完美結合》這本書來分享經驗者，蔡昇達堪稱是台灣遊戲界的第一人，甚至在整個台灣軟體業界，都很罕見。這本書的重點顯見於書名之中，著重在「設計模式」與「遊戲開發」，且兩者的重要性不相上下。作者撰寫本書的目的主要有二。首先，這本書是寫給遊戲程式設計師的，作者蔡昇達在遊戲設計業界累積了十年經驗，參與過無數耳熟能詳的專案（詳見下方..本書讚譽..），正所謂「十年磨一劍」，雖然動手完成這本書僅僅花費一年，但背後代表的是十年經驗的積累。本書作者希望所有的遊戲程式設計師能將工作重點，從「Coding」提升到「設計」的層次，藉由套用「設計模式」與多項物件導向設計原則，設計出可長可久的遊戲，不畏懼、甚至歡迎企劃、測試與使用者回饋帶來的修改需求與新需求。其次，本書也是寫給那些想要學習「設計模式」但不會寫遊戲的工程師閱讀的，本書採用的遊戲設計工具為Unity3D與C#，所使用的語法都是最簡單的，介面也是最容易上手的。至於遊戲部分，筆者挑選的是最常見、最淺顯易懂的範例，所有與本書遊戲相關的Domain Know-how，都難不倒任何一位曾經「玩過」戰鬥遊戲的軟體工程師。這樣做的目的在於，藉由遊戲做為範例，實際示範「設計模式」的強大之處。事實上，本書原本的另一個候選書名為《設計模式解析——以遊戲為例》。本書不同於其他講解「設計模式」的書籍，本書的所有範例都圍繞著同一個遊戲專案，並且將GoF的所有模式都套用到了該遊戲專案之中，光是這一點就很不容易，尤其是，本書還仔細思考過讀者的學習步伐，章節的安排讓讀者能夠循序漸進地學會所有的設計模式。讀者若在閱讀GoF的《設計模式》時，遇到無法理解的部分，也可將本書當作範例解析的參考書來使用。本書對於工程師而言，是一本非常容易閱讀的書籍，因為本書所有關於「設計模式」的章節架構、內容次序的安排都是相同的，步驟如下：1 土法煉鋼完成遊戲需求。2 簡介可以採用的「設計模式」，包含使用生活實例來解釋GoF對於該模式的定義。3 使用該「設計模式」重構或重新設計程式，以完成遊戲需求。4 搭配團隊對話的手法，討論日後遇到需求變化時，如何善用該「設計模式」的強大之處，以簡單的調整方式來進行維護。5 討論該「設計模式」還能與哪些「設計模式」配合，以及採用該「設計模式」的優缺點。6 最後則是討論該「設計模式」還能應用在遊戲設計的哪個環節。本書作者認為，透過上述步驟來學習「設計模式」與「遊戲開發」，是最能徹底明瞭「設計模式」與「遊戲開發」的學習方式。同時，本書還獲得了遊戲業界及軟體設計界的許多讚賞，因此，我們將之列為《中文原創經典》。本書程式碼的GitHub下載點如下：https://github.com/sttsai/PBaseDefense_Unity3D本書網站：（提供書中較大的UML原圖）http://gameworker.pixnet.net/blog
9789863477303,‧認識何時與為何使用設計模式‧運用singleton、abstract factory、chain of responsibility與observer等經典設計模式‧探討memento、composite、command、mediator等較不知名的模式‧認識Swift如何提供撰寫結構化程式的基本語言功能以方便閱讀、測試與維護‧學習如何運用Cocoa API實作經典設計模式‧以您現有的程式設計知識快速有效的在Swift中運用設計模式使用Swift開發iOS應用程式的經典設計模式Swift程式設計語言改變了iOS開發，並開啟了現代Cocoa開發的新紀元。本書為您展示如何在應用程式中發揚Swift設計模式的威力與彈性，讓你成為專案開發的大師。這本書會教導您常用於程式設計過程，但卻可能不知道或沒有善用的設計模式，這些模式能夠對Swift開發者證明它們的價值。暢銷作者Adam Freeman透過基本元素與進階功能為你解釋如何運用設計模式，以實務化的設計模式運用方式讓您學習Swift程式的結構化與規模彈性。
9789864340415,Python 是一門運用廣泛、物件導向的腳本式語言。在軟體工程中，所謂的設計模式即是用以解決軟體設計問題的推薦方案。儘管並非是什麼新事物，設計模式卻仍然是軟體工程領域的熱門議題，並且可作為軟體工程師解決常見問題的便捷參考資源。本書將帶領讀者深入解析每一種設計模式，並佐以真實世界中的範例。本書的目標是透過更加低階的細節與概念、來建構出符合Python 精神的程式碼，而非只是承襲那些來自Java 或C++的實作。內容包含了疑難排解、最佳實踐、系統架構、以及設計的多種面向。藉由本書的內容，讀者便能夠充分瞭解到Python 設計模式的概念與框架，以及相關的問題和解決方案。本書一共有16 種設計模式，能夠用來解決日常工作中的諸多問題。適用讀者本書適用於中等程度的Python 程式設計師，並且有意願將設計模式正確應用於Python 程式語言中。不過非Python 使用者若是對Python 有興趣，也能夠從本書獲益，只要先對Python 的基礎有所瞭解即可。你能夠從本書學習到：● 探索用來建立物件的工廠方法與抽象工廠。● 利用原型模式複製物件。● 藉由轉接器模式使不相容的介面變得相容。● 利用代理模式來保障介面。● 藉由策略模式來動態選擇演算法。● 利用裝飾器模式對物件進行延展，卻無須使用子類別。● 利用 MVC 模式保持UI 與邏輯之間的分離。
9789864340408,在軟體開發領域中，設計模式（Design Pattern）是專門探討最佳化軟體開發的解決方案，正確利用設計模式能夠確保程式碼的可重用性及可維護性。大多數有關於設計模式的著作是以 C++ 或 Java 為基礎，然而本書則是針對 JavaScript，藉由實際的開發範例，詳細說明了14種可供利用的設計模式。此外還補充了關於物件導向及函數式程式設計的基礎知識。透過本書，讀者將能夠習得如何最佳化 JavaScript 程式碼，開發出既高效又漂亮、並且滿足實務需求的前端應用程式。
9789862018200,"設計模式的解析與活用
Design Patterns Explained: A New Perspective on Object-Oriented Design (2nd Edition)

本書是以作者多年來為許多軟體開發人員講授模式的經驗為基礎撰寫而成的。作者的經驗已經證明，如果能夠理解模式背後的基本原則和動機，理解它們為什麼會這樣運作，那麼學習曲線將不可思議地縮短，而且可以懂得真正的物件導向思維模式。閱讀完本書，你可獲得閱讀其他設計模式文獻所需的足夠基礎知識，而且最重要的是，你將可為建立靈活、完善而且更易維護的軟體做好準備。

"
9789862764190,運用編碼和設計模式創建出更完美的應用程式 「這本書是Stoyan為大型網頁應用程式開發者所寫的指引」 -Ryan Grove，Yahoo!資深工程師 開發JavaScript應用程式最好的途徑是什麼？本書以出色而豐富的編碼模式和實踐方式回答了這個問題。如果你是程式開發的老鳥，正以JavaScript開發客戶端程式、伺服器端程式或桌面應用程式，卻苦惱於物件、函式、繼承和更多語言特有的問題—本書的抽象化(Abstractions)和程式碼模板(code templates)將提供給您最佳指引。 作者Stoyan Stefanov是JavaScript專家，本書所介紹的每個模式中都會提供實務上的有效建議，以及一些實際操作的例子。同時也會讓您了解有關反模式(anti-patterns)：常見的糟糕實踐方式，讓你看似解決了一些問題，但最終卻得不償失的模式。 ‧建立寫出高品質JavaScript程式碼的好習慣，例如避免使用全域變數、使用單一var宣告等 ‧了解為什麼實字符號模式(literal notation patterns)是比建構式更簡單的選擇 ‧探索JavaScript各式各樣定義函式(function)的方法 ‧建立超越基礎模式(使用物件實字和建構式)的物件 ‧學習JavaScript的繼承和程式碼重用的方式 ‧用JavaScript實現常見的設計模式，例如Singleton(單體模式)、Factory(工廠模式)、Decorator(裝飾者模式)等等 ‧檢驗瀏覽器環境中專屬的模式 建議具有程式設計經驗者閱讀 Stoyan Stefanov 現於Facebook任工程師一職，之前曾為Yahoo!資深技術工程師。同時他也是多本歐萊禮著作的作者、貢獻者和技術評論家，以及smuch.it影像優化工具的開發者和YSlow 2.0(Yahoo!的效能優化工具)架構師。他經常在各種會議和自己的部落格www.phpied.com上談論網頁開發主題。 目錄: 序第一章 介紹第二章 精要第三章 實字與建構式第四章 函式第五章 物件建立模式第六章 程式碼重用模式第七章 設計模式第八章 DOM和瀏覽器的模式 索引
9789862762172,內容簡介: 想要學習如何在現今的網路上建立優異的使用者經驗嗎？本書中，UI專家Bill Scott以及Theresa Neil為我們獻上超過75種的設計模式，以供建構具多樣化互動的網路介面。這些重要常規係萃取自作者於Sabre、Yahoo!和 Netflix 的多年經驗，並被歸納至6個主要原則，讓您能夠有效運用今日的網路技術。網頁介面設計以各自獨立的單元詳加介紹每個設計原則，幫助您： 。操作直接性 － 藉由頁內編輯、拖放功能、直接選取等模式，於情境中編輯內容 。保持輕質 － 運用情境工具留下「輕足跡」，減少與網站互動時所需耗費的時間精力 。同頁作業 － 善用覆蓋視窗、嵌入面板、動態內容和頁內流程等模式，將使用者保持於相同頁面 。送出邀約 － 利用邀約幫助訪客發掘網站的功能，暗示其進行下1層級的互動 。善用轉換效果 － 學習運用動畫、電影特效和其他轉換效果的時機、原因和方法 。即時反應 － 利用即時的回覆，提供多樣化的使用經驗。即時搜尋、即時建議、即時預覽…等等 網頁介面設計透過運作中網站的全彩範例，演示書中許多模式。若您需要讓所建構新網站或重整後的網站具備真正的互動性，本書將能提供為您帶來成功的設計模式。 對於運用多樣化網路應用程式支援使用者任務，本書涵蓋網頁設計師和開發者（或開發團隊）在做出明智決定時的一切知識。它是在現今網路世界生存的每位網頁設計師所必備的好書。－ Erin Malone Tangible UX總裁 Bill Scott為Netflix總公司的使用者介面總工程師。Netflix總公司位於美國加州的Los Gatos，Bill於此不斷琢磨其介面工程和設計的技術。 Theresa Neil為居於美國德州Austin的使用者經驗顧問，專門設計多樣化網路應用程式，客戶群囊括甫成立的新公司以及美國財富五百大企業。
9789865029364,"建構可擴展、易維護的物件導向軟體  「從昨天翻開這本書的第一頁開始，我就停不下來了！這本書超酷的，它不僅有趣、涵蓋許多層面，也切中要點，實在令人印象深刻。」 —Erich Gamma —IBM傑出工程師、《Design Patterns》作者之一  「彷彿從我的腦海中卸下一千磅重的書。」 —Ward Cunningham 維基百科的發明者，Hillside Group創始人  「《深入淺出設計模式》結合有趣、令人捧腹大笑的元素、深刻的見解和技術，以及實用建議，是一本有趣且引人深思的讀物。」 —Richard Helm 《Design Patterns》作者之一  你將從本書學到什麼？ 因為你不想重新發明輪子，所以尋求設計模式的協助。設計模式是曾經遇到同樣設計問題的人學到的經驗。掌握設計模式，你就可以利用他人的經驗和最佳做法，把寶貴的時間用在更有挑戰性、更有趣的事情上。本書將告訴你重要的模式有哪些、使用它們的時機和理由、如何在自己的設計裡面運用，以及它們根據哪些物件導向設計原則。《深入淺出設計模式》已經協助數以萬計的開發者提升物件導向設計技術了，快點加入我們吧！  這本書為何如此與眾不同？ 如果你曾經閱讀任何一本《深入淺出》系列，你應該可以預期你會看到什麼內容—為大腦量身打造的豐富視覺效果。用《深入淺出設計模式 第二版》來學習設計模式可以讓你遠離瞌睡蟲的干擾，讓你更擅長解決軟體設計問題，以及使用設計模式術語和同事們溝通。"
9789865027889,"資料準備、模型建構與MLOps常見挑戰的解決方案  「本書提供了豐富的範例，如果你是資料科學家或ML工程師，而且想要了解如何使用行之有效的解決方案來處理複雜的ML問題，你一定要看這本書。」 —David Kanter ML Commons執行長  「如果你想在建構ML解決方案的過程中減少傷害、碰撞和磨擦，Lak、Sara和Michael可以在背後支持你。」 —Will Grannis Google Cloud CTO Office常務董事  本書的設計模式介紹常見的機器學習最佳實踐法和解決方案。作者是三位Google工程師，他們整理了一些經過驗證的方法，協助資料科學家匯整ML程序中常見的問題，用這些設計模式來將數百位專家的經驗整理成直觀、平易近人的建議。  這本書詳細地解釋30種模式，介紹資料和問題的表示法、作業化、可重複性、再現性、靈活性、可解釋性和公平性，每一種模式都包含問題描述、各種可能的解決方案，以及視情況選擇最佳技術的建議。  你將學會： ‧在訓練、評估和部署ML模型時，認出常見的挑戰並處理它們 ‧表示各種ML模型的資料，包括embedding、feature cross(特徵交叉)等 ‧為具體的問題選擇適合的模型 ‧使用檢查點、發布策略和超參數調整來建立穩健的訓練循環 ‧部署可擴展的ML系統，以便用新資料來進行重新訓練和更新 ‧向關係人解釋模型為何做出那些預測，以確保模型公平地對待用戶 ‧提高模型的準確性、再現性和復原力"
9789865026547,"實用的互動設計模式  「許多年來，《操作介面設計模式》一直是使用者體驗設計師書架上的重要藏書，這次也會承襲傳統。這個新版為舊版及每位設計者帶來重要且相關的更新。在可見的未來，它將再次成為實作與互動模式的最佳參考。請別錯過本書所帶來的更新！」 -Erin Malone Principal, Experience Matters Design Chair, IXD BFA Program, California College of the Arts  現今企業需要對爆炸式成長的頻道、螢幕種類與內容，建立引人注目、完美的使用者體驗；要能設計出好的應用程式介面並不是件容易的事。在本書第三版中，您將學習到如何在令人眼花繚亂的設計選擇中找到方向。借鏡最佳的使用者介面設計模式實作，這本暢銷書將能提供常見設計問題的解答。  您將會學到移動裝置應用程式、網站應用程式及桌面軟體的使用者介面模式。每個模式都含有全彩的範例及實用的設計建議，讓您可以立即應用。有經驗的設計師可將本書當作設計參考書，新手設計師將會找到介面世界及互動設計的學習之路。  ‧在開始設計前，請先瞭解您的使用者 ‧建立適合使用者的軟體建構 ‧設計元件幫助使用者在任何裝置上完成工作 ‧學習在軟體中協助使用者不迷路 ‧放置元素指引使用者找到資訊或功能 ‧學習視覺設計如何成就或毀壞產品的可用性 ‧賞心悅目地呈現複雜資料"
9789864344987,"【名家名著】 21  想要讓程式更具彈性、更容易測試、更接近clean code， 你需要降低元件之間的耦合度， 依賴注入將是你強而有力的工具！ 它是組合取代繼承的重要實踐！    Odd-e Taiwan 敏捷技術教練 陳仕傑（91）專文推薦    名人盛讚  「我非常推薦與認同書裡的脈絡安排與學習順序，其實戰性毋庸置疑。」 ──Odd-e Taiwan 敏捷技術教練：陳仕傑（91）   「實用的範例內容讓原本虛無縹渺的概念具體化了... 作得太好了。」 ──Glenn Block，來自Microsoft   「內容豐富、思路清晰、指引明確、而且... 永久受用。」 ──David Barkol，來自Neudesic   「這本書正是所有.NET 軟體設計師需要的。」 ──Paul Grebenc，來自PCA Services   「這本書把那些原本雲裡霧裡的模糊觀念全都撥雲見日。」 ──Rama Krishna，來自3C Software   「跟隨這本書的獨特思維，深入學習現代軟體開發的實務原則。極度推薦！」 ──Darren Neimke，來自HomeStart Finance   「對依賴注入議題所需要知道的一切都在這本書裡了，保證物超所值！」 ──Jonas Bandi，來自TechTalk   「想了解依賴注入必讀之書。」 ──Braj Panda，來自Capgemini India   「這本書是你在.NET 開發框架上的依賴注入架構指引經典。」 ──Doug Ferguson，來自Improving Enterprises   「要讓軟體保持彈性應付多變的需求，就必須降低元件之間的依賴性。如果能夠把依賴性在使用時才注入，就能保持軟體發展的最大彈性，而這就是依賴注入。依賴注入是一項成果，應用這項成果最多的則是各式各樣的框架（尤其是Web框架），例如.NET Core、Spring Boot。依賴注入活用了眾多的設計模式，而這些設計模式則充分利用了OOP的多型來進行軟體的OOD。很少有作者可以把依賴注入寫得如此易學與完整，所以這本書毫無疑問成為該領域不可或缺的大部頭書籍，博碩文化引進本書翻譯為繁體中文，期待藉由這本書能大幅提升台灣程式設計師的軟體設計思維。」 ──博碩文化 總編輯 陳錦輝   ----  要降低軟體元件之間的緊耦合程度，最好的方法便是引入「依賴注入（DI，Dependency Injection）」技術。在鬆耦合架構下，不用再自己手動指定資料庫連線時要使用的驅動，而是透過一個可被替換的第三方元件進行。本書將說明如何在ASP.NET Core這類應用程式框架下，利用DI架構幫助你管理軟體中的變更與複雜度議題。  《依賴注入-原理、實作、與設計模式》的前身是來自於暢銷經典書籍《Dependency Injection in .NET》一書的重編與增量版本。本書會從基礎開始從頭介紹何謂DI架構，並且在說明打造具備鬆耦合與完善架構的應用程式上，會遇到哪些設計模式、應避免的反模式、並且對此提出可供參考的範例內容。這些以C#程式語言寫成的範例，具備完善的說明註解並搭配圖表，可以幫助讀者在以現代物件導向程式語言以及支援DI架構的容器函式庫進行開發時，順暢無誤地遵循實務原則與設計模式。  本書內容 ❖教你如何將既有程式碼，重構為鬆耦合架構 ❖以標準物件導向程式語言觀點來實作的DI技巧 ❖與標準.NET框架整合的教學內容 ❖將舊版範例內容重新編寫，以.NET Core框架來示範DI架構  本書適合那些對物件導向程式語言已有一定熟悉的讀者。  延伸閱讀： 《無瑕的程式碼》系列叢書 《單元測試的藝術》 《領域驅動設計》 《Working Effectively with Legacy Code中文版》"
9789570431315,0
9789867794529,"寫應用程式時需要依照需求預先規劃、設計，而設計模式累積了前人的經歷，經由四人幫彙整出一系列的設計模式，以利後人可以套用。本書集合四人幫的23個模式（十幾年前的事）外加這十幾年來新增的一些模式，作者群以詼諧、幽默、圖文並茂、打破傳統著書的方式，由淺入深地詳解了設計模式的精神及重點。全書全部以當紅的 Java 程式語言為範例。

全世界第二本書介紹了設計模式，第一本為 Addison Wesley 的《物件導向設計模式》。而兩本書的問世日期隔了十年之久。每位程式設計師必備的參考書。程式設計課程的最佳教材。"
,0
9789864342099,《名家名著》03 　 V.S. 《無瑕的程式碼》03小記者︰能說說你對《無瑕的程式碼──敏捷完整版》的讀後心得嗎？工程師︰自從讀了這本《敏捷完整版》之後，我再也不怕面對那些慣老闆、慣客戶了。而且客戶滿意度、專案完成度都一百分呢！這本書是《無瑕的程式碼》系列書的第三冊，也是《名家名著》系列書的第三冊。主題是「敏捷開發」，而重點仍舊是回歸到「如何撰寫出好的程式碼」。什麼是「敏捷開發（Agile Development）」呢？簡單來說，它是軟體開發的一套方法，特點是只要透過這套方法，就能使你的專案更敏捷。我們為何非得要讓專案變得敏捷呢？原因無他，就是因為我們有慣老闆、還有慣客戶。也就是說，對於現今的市場環境而言，專案不夠敏捷是不行的。這一點，相信所有的軟體工程師都無法否認吧！可是你可能會反駁說，各行各業都有慣老闆和慣客戶啊（至少在台灣是這樣），為什麼軟體業就要一套特別的方式來應付他們呢？這就是要回歸到一個最根本的問題，「什麼是軟體？」，或者更精確地說「什麼是軟體設計？」，而這個問題和所有的軟體工程師（或程式設計師）習習相關，因為這是工作的本質。各式各樣的工程有著所謂的程序，例如橋樑工程師會先進行結構分析，他們會建立電腦模型並進行模擬，接著他們會建立比例模型，並在風洞中或用其他一些方法進行測試。當這些程序都完成了，才會將設計圖交給橋樑的建造工人去建造出真實的橋樑。以上是橋樑工程的開發程序，那麼軟體開發的程序呢？在很久很久以前（真的是很久很久以前了），軟體開發也發展出了所謂的程序，也就是瀑布型開發程序。在瀑布型開發中，系統分析師會依照需求與規畫，畫出所謂軟體的設計圖（例如UML圖），然後由「程序員」根據這些圖去寫出程式碼，最後建置（build）成可使用的軟體。依照瀑布型開發程序開發出來的軟體，客戶只能選擇要用，還是不要用。不要用的話，是否有其他選擇？如果沒有，那麼客戶即便不滿意，也就只能將就著用（只是邊用邊罵而已）。當然，這是指套裝軟體的開發而言。用一個例子來做比方，數十年前，台灣只有國道一號的日子，一位民眾想要開車從彰化到新竹，就只能有一個選擇，即便他不滿意苗栗那段高爬坡會折損車輛壽命，他也別無選擇。但當國道三號建造完畢後，他就有了第二個選擇，因此他會選擇他喜歡的國道來行使。建造國道的總經費是昂貴的（無論是時間還是金錢），但最貴的部分是在於建造部分，而非設計部份。所以國道並不多。競爭者很少。但這種商業模式在軟體業是行不通的。若用早期的瀑布型開發程序來對比於國道建設，真正的建造部分，其實就是軟體建置（build）的部分，這部分只要一台電腦，一個編譯器，一個連結器，還有一點點的時間就完成了。所以代價是極低的。或許有人會說，不對，建造的部分應該也要包含按照UML圖去Coding的人工與時間成本。所以這部分的代價應該也是昂貴的。這種說法表面上看似合理，但有多少程式碼是完全依照UML圖編寫的呢？在撰寫程式碼的過程中是否會修改原有的UML設計呢？早期這類情況並不嚴重，但晚期因為客戶的挑剔，這種情況早就屢見不鮮，甚至任何軟體工程師在開發專案時，心中早有預期會出現需求發生變化的情況。國道的建造工人是無權修改設計圖的，他只能「按圖施工」。而程序員卻去修改了設計圖，這將使得設計圖無法作為最終產品的設計文件。因此，在這種情況下，最終產品的設計文件其實只有一份是準確的，這份文件就是「程式碼」。同時，在這種情況下，程序員應該已經不再只是「程序員」或「碼農」了，因為他參與了設計，換句話說，他應該稱之為程式「設計師」或軟體「工程師」。（在敏捷開發中，並不只有那些繪製UML圖的才叫做設計人員，正確地說，繪製UML圖的人常常也是負責寫程式的人）。好的，如果你已經承認「寫程式」也算是「設計」的一環，那麼軟體建置（build）的成本（也就是軟體的建造成本，而非設計成本），應該是無庸置疑的低廉了。這也就是為什麼，客戶說，那邊改成XXX顏色，可以嗎？你會很乾脆地回答，當然沒問題，然後五分鐘內就給客戶看改完之後的結果。想一想，如果要改的是一整段國道護欄的顏色，相信沒有客戶敢做這樣要求，因為他們能預期到，這會花很多很多的錢。所以說，建造軟體的花費是很少的，大多數的錢都是花費在「設計」上的。但對於其他工程就不一樣了，設計花費的錢相對於建造花費的錢來說，低廉了許多。也就是軟體的這種特殊性，導致了客戶（更有可能的是上司）常常想要東改改、西改改，需求常常在變化。在現今這個快速變化的世界裡，慣客戶與慣老闆們為了競爭優勢（他們心中的競爭優勢），提出需求的變化根本是家常便飯。在確定了「需求會變化」、甚至是「會頻繁地變化」這個軟體工程師一定得面對的事實後，軟體工程師該怎麼辦呢？有一群大師級的軟體工程師，開始發明了一系列因應的對策，包含設計模式、極限程式設計、測試驅動開發等等的技藝，還總結了一些物件導向的設計原則。這些都有助於應付變化。最終，這些人集合起來成立了一個「敏捷聯盟」，取名為敏捷（Agile），意思是軟體開發者及軟體本身應該如何敏捷地應付需求的變化，當中牽涉到的範圍極廣，從成員的組織到程式碼的組織都必須敏捷起來，這是門現代軟體設計的顯學，國外大廠早已採用多年。Robert C. Martin（Bob大叔）是敏捷聯盟的創始成員之一，也是當中付諸行動並且有所成效的成員之一。他擁有極具說服力的文筆與口才。在這些年中，不斷出書、演講、作為顧問實際前往開發現場指導，並自創「Clean」一詞，其著作還曾獲得Jolt大獎，《Clean Code》一書也成為Amazon該類別最暢銷的著作，這些都對於敏捷開發的推廣有著極重要的貢獻。根據《Clean Code》內文的說法，《Clean Code》可說是本書的前傳，而本書是完整說明如何實踐敏捷的書籍。如果您也喜歡Bob大叔的著作，如果你也是Clean派的弟子，或者你想實際體驗敏捷開發，那麼你一定不能錯過這本書。本書的寫作風格是循序漸進，由淺入深的，作者會先提出一個問題，然後分析問題，接著實作它，然後是檢討它，展現出初次實作時的錯誤與失策，接著就展示如何透過作者所主張的技術來解決這些問題。這是一本非常講究實務的實踐書籍。此外，本書主要使用的是C#程式碼，這是由Bob大叔的兒子Micah Martin根據C#與.NET平台的特性重新改寫Jolt得獎著作而來的，改寫幅度包含所有的程式碼與內文，並採用了更容易理解的案例來詳述敏捷開發。如果你平常使用的是其他語言，也不必在意，因為傳播的介質不重要，傳授的內容才是本書的價值所在。對於一些技術細節，本書果真是大師級的作品，原創性極高，在UML章節中，Bob大叔示範了他如何使用UML（果真和一般人不太一樣），還示範了如何使用UML才能幫助你而非是製造混亂的來源。對於設計模式而言，除了GoF的知名設計模式之外，Bob大叔還在本書中提到幾個他自己常用的設計模式，有些可以視為GoF 23個設計模式的變形，有些則不是，但重點是這些模式都非常好用，可以應用在不同的應用場合，同時Bob大叔也釐清了，某些模式為何不該在哪些場合中使用，他是以效益來看待這件事的，而這也是本書的最大特色：務實。
9789864801268,"情境分析×聲音設定×加工修飾好懂好玩好操作，35種特效一次學起來！   聽起來就是自自然然！最厲害的音效是，配上畫面後完全不會引起注意 「架空」、「虛構」、「科幻」類型的作品，適合使用合成器製造聲音，表現非現實的效果；寫實類的作品，以收錄實際存在的聲音做為素材，最能呈現真實感。不論哪一種，都需要搭配影像情境做後製加工，聲音效果才能與畫面相融無間、毫無違和。本書為日本第一線遊戲電玩作品的專業音效設計者綜整分享多年背景音樂和音效設計製作的實戰經驗法則。讓你可以step by step學會基礎音效製作原理、技巧和訣竅，更能從中衍生更多音效的可能性。 【專業推薦】 （依姓氏筆劃排列）Frank／DigiLog聲響實驗室創辦人楊文祥／雷亞遊戲資深音效設計師；前大宇資訊、遊戲橘子、IGG音效師影製所 DC FILM SCHOOL／專業製作社群  【本書特色】‧合成器＋收音兩大音效製作法，必備技巧一次掌握‧設定範例＋功能操作示範＋效果加工，步驟說明深入淺出‧環境音、擬音、效果音，各類型聲音設計模式，應用廣泛‧隨書附錄範本音效，參照練習初學者也能輕鬆重製"
9789865025960,"進行測試驅動開發、領域驅動設計及製作事件驅動微服務  「這是一本社群期待已久的書籍，讓大家看到現代app架構的核心在Python裡面究竟長怎樣！Harry與Bob展示了依賴反轉原則在這種時尚、動態的語言中有多麼優雅。」 —Brandon Rhodes Python-patterns.guide作者  「截至目前為止，坊間幾乎沒有介紹使用Python編寫可維護大型系統的Python原生教材。本書展示Python可以遊刃有餘地進行重要的軟體開發。」 —Hynek Schlawack Python忠實支持者、部落客及演說者  隨著Python越來越流行，專案的規模也越來越大、越來越複雜，讓許多Python開發者對高階軟體設計模式產生濃厚的興趣，例如六邊形/整潔架構、事件驅動架構，和以領域驅動設計(DDD)制定的策略模式，但是將這些模式轉換成Python不是那麼容易。  透過這本實戰指南，來自MADE.com的Harry Percival與Bob Gregory介紹一些行之有效的架構設計模式，協助Python開發者管理app的複雜性，並且充分利用測試套件。  作者透過具體的範例和優美、典型的Python來介紹各種模型，避免Java與C#語法的冗長表述。  本書介紹的模式包括： ‧依賴反轉，以及它和port及adapter(六邊形/整潔架構)的關係 ‧領域驅動設計與Entity、Value Object及Aggregate的區別 ‧持久保存機制的Repository和Unit of Work模式 ‧事件、指令和訊息匯流排 ‧命令查詢責任隔離(CQRS)模式 ‧事件驅動架構與反應式微服務  Harry Percival 在2009年就開始使用Python了，他也是TDD和XP的粉絲。他是O’Reilly書籍《測試驅動開發｜使用Python》的作者，此書的副標題更是聞名—服從測試羊。  Bob Gregory 使用領域驅動設計來建構事件驅動系統已有十多年之久了，他曾經用過的語言包括C#、F#、Python與TypeScript。"
9789865501402,本書特色 ► 可在Windows、macOS、Linux平台上開發.NET Core應用，也可以透過Docker容器部署ASP.NET Core ► 植入架構、請求處理管線等建立ASP.NET Core應用的基本程式設計模式，依賴植入原理及架構的設計與程式設計方式完整介紹 ► 抽象的檔案系統，包括物理檔案系統和程式集內嵌檔案系統 ► 介紹支援多種資料來源的設定系統；採用Options模式來讀取設定選項 ► 介紹5種常用的記錄診斷記錄檔的方式及多種輸出通道的記錄檔系統 ► 承載系統以及從程式設計模型的角度來認識管線 ► 提供一個極簡版的模擬架構來展示ASP.NET Core架構真實的管線 ► 針對請求的處理則表現在有序排列的中介軟體上，包括處理檔案請求、路由、例外的中介軟體，也包含用來回應快取和階段的中介軟體 ► 詳細說明認證、授權、跨域資源分享等安全相關的中介軟體 ► 介紹當地語系化、健康檢查的中介軟體。除此之外，亦包含實現主機名稱過濾、HTTP重新定義、設定基礎路徑等功能的中介軟體 本書重點 ASP.NET Core是一個全新的Web開發平台，作為核心的Web開發平台，ASP.NET Core可利用其極具擴展能力的請求處理管線，來支撐目前常用的開發模型，如MVC、GRPC、SingalR和Orleans等。不論從事哪種類型的Web開發，甚至可以在ASP.NET Core平台上構建自己的Web程式設計模型。 本書主要內容 全書主要劃分為以下4部分： ► 跨平台的開發體驗和實現原理 01 透過Hello World程式，讓讀者體驗在Windows、macOS、Linux平台上開發.NET Core應用，以及透過Docker容器部署ASP.NET Core應用的樂趣 02 告訴讀者.NET Core的跨平台是如何實現的 ► 基礎架構 03、04 對依賴植入原理及依賴植入架構的設計與程式設計方式進行介紹 05 對檔案系統的設計模型和兩種實現方式（物理檔案系統和程式集內嵌檔案系統）進行介紹。 06 介紹支援多種資料來源的設定系統項 07 說明強類型的設定選項程式設計方式 08 介紹5種常用記錄診斷記錄檔的方式 09 介紹.NET Core提供支援多種輸出通道的記錄檔系統 ► 管線詳解 10 介紹.NET Core的服務承載系統。 11 從程式設計模型的角度來認識管線 12 提供一個極簡版的模擬架構展示ASP.NET Core架構的整體設計 13 以模擬架構為基礎，展現ASP.NET Core架構真實的管線 ► 中介軟體 14、15；16、17、18、19、20、21 處理檔案請求、路由、例外的中介軟體，也包含用來回應快取和階段的中介軟體，還包含用來實現認證、授權、跨域資源分享等與安全相關的中介軟體 22介紹針對當地語系化的中介軟體 23 介紹健康檢查的中介軟體 24 介紹用來實現主機名稱過濾、HTTP重新定義、設定基礎路徑等功能的中介軟體 適合讀者群 沒有接觸過ASP.NET Core的開發人員、資深的.NET開發設計人員、所有.NET技術從業人員。
9789865405762,"你今天AR了沒？全書附6篇AR體驗，拿起你的手機，來一趟AR之旅吧！ AR不僅是現今體感科技的潮流，更是一種快樂科技，這個世界需要AR讓生活精彩有趣，讓腦海中的夢想化為真實！ AR魅力無可擋，全球大型產業更已紛紛導入AR領域應用，本書帶領您深入了解AR的趨勢發展、產業應用、設計模式、精彩案例與未來展望，帶領您深入AR領域，透過創新思維，幫助您了解這塊不退流行的AR美麗新世界！  AR到底是什麼Augmented Reality擴增實境技術（簡稱AR），由首次的概念提出到現在已經歷經了數十載，直到2010年代，才開始逐步由實驗場域進入市場，讓一般大眾有機會見識到虛實之間真實結合的魅力！AR到底是什麼？AR擴增實境不僅是一項技術，也是一種創意工具；AR串起了實體與虛擬間的橋梁，讓各項資訊與動態可以透過視覺直接連接；AR引領現今的數位轉型與體驗經濟，有效達成外部行銷溝通與內部模擬訓練的效果；AR可串連電腦、手機、智慧眼鏡等載具，透過跨平臺運作支援各項繁雜需求；AR可以在場域中進行虛擬導覽導購，也可以在家成為防疫工具；AR創造出來的成效不僅讓人想主動參與，並將體驗成果深刻印記在腦海中，達到記憶力提升的效果，進而達到促動傳播、引發消費等主動式行為！AR是一種快樂科技，在探索中創造全新感受，達到心流體驗與自我成長的境界！AR有極大可塑性，可幫助各產業達到創新模式，並且與生活緊密結合！AR魅力無可擋，不僅Apple、Google、Facebook、微軟等大廠皆已投入資源引領研發，全球大型產業更已紛紛導入AR領域應用，在這股科技創新趨勢下，本書將帶領您深入了解AR的趨勢發展、產業應用、設計模式、精彩案例與未來展望，帶領您深入AR領域，透過創新思維，幫助您了解這塊不退流行的AR美麗新世界！  "
9789865444532,"本書探究我國十二年國教下，中學英語文教師應有的教學專業知能，這是本書不同於一般英語文教材教法教科書之處。本書由國內學有專精的英語文師培教授及經驗豐富的國高中英語文老師共同撰寫。第一章簡述國際英語教學百年來重要的思潮轉變，連結到十二年國教英語文課綱。第二章談英語文課程發展基本理念與模式，及如何培養老師設計英語文課程的能力。第三章介紹核心素養，說明素養導向教學的原則，並提供教學示例。第四章介紹跨領域英語文課程的設計原則與方法。第五章談英語文適性教學，針對差異化教學及補救教學兩大面向，探討教學原則。第六章討論議題融入的課程設計模式與原則。第七章呈現教案編寫的原則及方法。第八章談學習評量，聚焦於「促進學習」的評量功能，討論其評量原則及策略。第九章談資訊科技融入英語教學的原則。各章結尾提供「討論與實作」，引導讀者反思該章重點，進一步延伸、應用於其他情境，以深化學習。"
9789865004316,本書的誕生，和試圖掙脫這種無力感有關。作者選取了這場前端“工業革命”中最具代表性的寵兒——React為主題，將自身經驗分享給讀者，透過解讀原始碼、分析設計模式、案例實戰的方式，探究框架或技術堆疊的設計思路，掌握React這一個靈活、高效的視圖層開發庫。
9789863797685,"Django是一款基於Python語言及MVC設計模式實現的Web應用開發框架，作為一款可使Web開發工作愉快並且高效的Web開發框架，能夠以最小的代價構建和維護高品質的Web應用。 利用模型物件關係對映、URL比對模組、內建範本語言和快取系統，實現業務模組拆分和快速部署，Django嘗試留下一些方法，讓使用者根據需要在Framework之外開發。 適用：可以作為開發工具和寶典，透過閱讀和參照實現，可以完成開發者最初的開發指導，也可以作為平台架設的實例指導。"
9789865020774,運用容器技術，在分散式系統上使用設計模式容器工具與技術的推進，已經從根本改變了分散式系統的發展。本書提供了一系列可重用的泛用模式，可以讓分散式系統的開發更加容易與具有效率。開發人員需要從頭開始建構這種系統，導致每個架構都是獨一無二的。Brendan Burns將在本書示範了如何應用現有的軟體設計模式，建構可靠的分散式應用程式。系統工程師和應用程式開發者將從這些模式中學到如何提供一個共用的語言和框架，藉此獲得系統品質的提升。●了解如何利用設計模式與可重用元件加速可靠性分散式系統的開發●使用Sidecar、Adapter、Ambassador模式將應用程式拆分成一台電腦上的容器叢集●探索鬆耦合的多節點分散式模式，以便在元件之間進行複本、擴展和通訊●了解大規模批次資料處理的分散式系統模式，包含Work Queues、Event-based Processing、Coordinated WorkflowsBrendan Burns是Microsoft Azure的傑出工程師，也是Kubernetes開源專案的聯合創始人。在加入微軟之前，曾在Google雲端平台（GCP）工作，並協助建置如Deployment Manager和Cloud DNS等API。「本書對分散式系統的基礎知識做了精采的介紹，同時也說明了如何使用Kubernetes這類容器管理工具與雲端工具相結合，是一本能夠幫助您建構分散式架構的實用指南。」－－Container Solutions策略長／Anne Currie
9789865020590,建立開發者熱愛的API◎認識請求／回應與事件驅動API設計模式◎以最佳做法設計滿足顧客需求的API◎使用模板建立API設計流程◎擴展你的web API，使它支援持續成長的API呼叫與使用案例數量◎定期調整API反映產品或商務的變化◎提供資源給開發者，包括API文件、範例與工具使用web API協助app開發者是許多軟體工程師熱愛的工作。但是建立熱門的API與生機蓬勃的API生態系統也是最具挑戰性的工作之一。開發者、產品經理、架構師、開發者關係專家與技術主管都可以從這本實用的指南中學到如何設計、擴展、行銷與發展可交互運作的API。作者Brenda Jin、Saurabh Sahni與Amir Shevat在書中解釋API設計原理，並提供練習讓你親自操作，以學會建構自己的web API並管理產品的運作。你也會學到如何建構與維護API的開發者生態系統。本書包括許多來自頂尖公司的專家建議、工作表、檢查清單與案例研究，這些公司包括Slack、Stripe、Facebook、Microsoft、Cloudinary、Oracle與GitHub。「下定決心建立與支援公用API是很大的責任；本書讓你輕鬆地避免陷阱，建立出蓬勃的開發者生態系統。」－－Slack CTO／Cal Henderson「如果你想瞭解API理論、設計、架構與成功之道，這是一本最全面的指南。」－－Google Launchpad Accelerator技術主管／Richard Hyndman「如果你是開發者，無論你要製作API還是使用API，都一定要購買這本書。」－－Microsoft AI&Research群體專案經理／Yochay Kiriaty
9991071225021,《做自己的生命設計師》自己的人生，自己設計！終於，有一本書要教我們如何打造人生，更貼切的說法是「設計」人生。任何年齡、任何人生階段都適用－－◎歷經15年實證的課程（8年在柏克萊，7年在史丹佛）本書精鍊自史丹佛設計學院知名的生涯規畫課程，由兩名教授共同撰寫。歷經十幾年的實證，此課程的生命設計模式對於個人的改變相當有效，大幅降低焦慮感以及有關職涯、生命的錯誤迷思，能更有效地達到職業目標。作者教學經驗豐富，深知激勵人心的祕訣，將設計與生命觀點的共通性緊密串連。◎適用於各年齡層人士課程內容經過濃縮，適用於不同的生命情境，簡易、實行度高。不論是對二十、四十、六十歲的人，剛踏入社會、轉換跑道、中年轉職或屆臨退休的人士，在生命的不同階段都有啟發性跟實用性。◎輕鬆解決一生中最重要的課題在人的一生中，職涯成功與否、生命快不快樂，都是重要課題。然而，針對此課題，以及面臨生命走向的重大決定時，我們的教育系統幾乎沒提供相關的工具。本書用「設計思考」回答人生最具挑戰性的問題：「我這一生要做什麼？」展現在史丹佛開創、於矽谷發揚光大，嶄新又富創意的生命設計過程。◎矽谷頂尖設計團隊本書作者的設計作品包含蘋果「老鼠」、第一台消費性筆電、雷射印表機、星際大戰動作人物等。比爾是史丹佛設計系的執行主任，也是蘋果Powerbook的行銷主管。戴夫則是史丹佛生命設計實驗室的共同主任，也是全世界最大的跨國性互動娛樂軟體公司「美商藝電」（Electronic Arts）的創辦人之一。◎設計師也熱愛問題●如何才能找到喜歡的工作？甚至是熱愛的工作？●如何才能打造讓我過著美好生活的事業？●如何平衡事業與家庭？●如何改變世界？●怎樣才能瘦到爆、性感，並且有錢到天怒人怨？◎生命設計的五種心態●好奇心●行動導向●重擬問題●覺察●通力合作設計師靠著「設計思考」（design thinking）解決問題，帶來我們今日的世界。看一看辦公室，看一看家裡，手上那台平板、那支手機、坐著的那張椅子，生活中每一樣東西都源自設計，而每一個設計的起點，都是設計師或設計團隊想解決的問題。本書作者比爾‧柏內特（Bill Burnett）與戴夫‧埃文斯（Dave Evans）讓我們瞭解，如何透過設計思考，創造出有意義又快樂的人生。不管是誰，身處何方，現在或先前的工作是什麼，目前多老或多年輕，都可以藉著那些帶來世上美妙科技、產品、空間的設計思考，打造專屬於自己的事業與生活，活出圓滿、有趣、創意無限、生產力十足、永遠有驚喜等在前方的人生。《做自己的生命設計師－－你的專屬練習祕笈》生命設計不可或缺的最強指引！《做自己的生命設計師》【官方正版練習祕笈】自己的祕笈，自己寫不論你已經讀過《做自己的生命設計師》，還是正在閱讀，只要立刻動手設計，嘗試踏實又有創意的步驟，人生不再迷茫。人生永遠面臨抉擇－－●不清楚自己喜歡什麼？●不知道如何邁出第一步？●不確定自己有沒有退路？◎用書寫加深設計思考、將抉擇立體化、結合人際資源《做自己的生命設計師》× 專屬練習祕笈 ＝ 獨家寶藏圖～邊讀邊寫，邊寫邊讀，縮短平面接收到立體實踐之間的距離。有了這本互動式的實作指南，實際應用生命設計的精髓，大大提升生命設計功力，成為自己的生命設計師。●裸背精裝，開本適中：方便翻閱、隨身攜帶。除了前言簡介生命設計的要點，全書分成10個段落及步驟，循序漸進，帶領讀者掌握生命設計的精髓。●直接可用：雖是自己填寫的練習簿，讀過或是正在讀《做自己的生命設計師》的讀者，有了這本祕笈在手，可立即嘗試書中的步驟，達到立竿見影之效。●個人化的筆記書：生命是可以設計的，但也需要實踐的歷程。藉由書寫，釐清個人的方向與目標，日積月累即成為個人的抉擇寶藏圖。●書寫破除迷障：現代人接收資訊的方式多半來自網路，卻缺乏消化及整理的空間與時間。書寫與塗鴉能創造特別的吸收氛圍，讓浮光掠影更容易留下印記，面對紛雜資訊的讀者也會更加篤定。●從點線面最大化生命設計的實用面向：生涯規畫在任何人生階段都是非常切身的題目，延續《做自己的生命設計師》的內容。無論是個人，還是企業教育訓練、工作坊、生涯規畫等團體課程，都是最佳輔助工具。設計你最重要的計畫：你‧的‧人‧生史丹佛大學最夯的生涯規畫課程「做自己的生命設計師」，不僅影響好幾代學子，成書後也引起廣大的迴響，榮登《紐約時報》排行榜。這本個人專屬練習祕笈，可隨身攜帶、翻閱、書寫、記錄，隨時開發自己好奇的事物、動機和技巧，定義各種目標，追蹤生命設計的歷程。透過耳目一新的選項生成工具及練習，設計自己的生命，其中包含：●健康／工作／遊戲／愛的儀表板：檢視工作／生活平衡的實用工具。●引導問題：輔助你找出人生觀、工作觀，打造出自己的人生羅盤。●好時光日誌：記錄你一整天從事各項活動的精力與投入狀況。●點狀拉頁：方便繪製各種心智圖，發想天馬行空的嶄新想法，不再受限。●奧德賽計畫工作頁面及表格：幫助讀者針對不同版本的未來，思考並切換計畫，進行各式生命設計訪談。不論是剛畢業、工作數年、開始思考職涯第二春或退休生活，準備跨出重大改變的那一步，還是單純只想調整、改善現況，這本實作練習簿都將成為你專屬的動態地圖，為生命增添更多樂趣，在打造夢想的同時，踏上驚喜不斷的旅程。
9789575925192,本書分析當前傳統企業面臨的形勢和內部創業的內涵及適用性等，從頂層設計、模式落地、人才管理、裂變式創新、企業文化、創業孵化器這六個角度入手，對企業在內部創業具體實踐過程中會面臨的各種問題360 度全方位解析。另外，並透過華為、王品、海爾等公司內部創業的案例，闡述了內部創業可能存在的陷阱。
9789864769926,現在有許多領域都廣泛使用Python，例如軟體建構、系統管理與資料處理。在這些領域中，經驗老到的專家可以找到效率低下、有問題的案例，以及導致不良程式的隱患。看完這本書的讀者將會瞭解這些問題，更重要的是知道如何修正它們。 本書首先介紹編寫簡潔程式的基本元素，以及它在Python程式設計中有多麼重要。你將瞭解如何運用Python標準程式庫與軟體設計最佳做法來編寫高效且易讀的程式。你也會學到如何在Python中實現SOLID原則，以及使用裝飾器來改善程式。本書將更深入地探討Python的物件導向程式設計，告訴你如何透過描述器與產生器來使用物件。本書也會展示軟體測試程式的設計原則，以及如何在程式中實作設計模式來解決軟體問題。在最後一章，我們會從堅實平台的基礎程式開始談起，將單體應用程式拆成微服務。 讀完本書之後，你將能夠熟練地運用業界認可的編寫技術來設計簡潔、易維護、易讀的Python程式。 你會學到：●設定工具，在開發環境中高效率地工作 ●Python的魔術方法如何協助我們編寫更好的程式 ●利用Python的特性來建立更高級的物件導向設計 ●使用裝飾器與描述器來移除重複的程式 ●藉助單元測試來有效地重構程式碼 ●在Python中實現SOLID原則
9789864342693,◎適用最新版的Laravel 5。◎當前最受歡迎的PHP框架。◎框架設計完全符合設計模式的五大原則。◎功能開發迅速，輕鬆達到網站客製化。Laravel是PHP的框架（Framework），提供了很多開發網站或API所需的工具及環境，可以經過簡單的設定就可以完成資料的處理及顯示，使開發者可以很「優雅」且「快速」的開發出各個不同的產品。本書適合有PHP基礎的人，但不知道要怎麼選擇框架，或者不用框架的人也能夠明白它的好處。雖然WordPress也能夠架站，但如果有客製化需求、開發各式各樣的網站，或打算提供App使用的API，如此一來你只能選擇用框架，而Laravel是目前最受歡迎的。本書將詳細解說為什麼要使用框架，以及理解框架的優缺點後，要怎麼選擇框架，並用框架快速建構一個網站。除非必要，否則書中會避免專業技術用語，盡量使用最生活化易懂的例子及語氣，讓大家更容易進入 Laravel 的世界。
9781784701178,"自己的人生，自己設計！ 終於，有一本書要教我們如何打造人生，更貼切的說法是「設計」人生。 任何年齡、任何人生階段都適用－－ ◎歷經15年實證的課程（8年在柏克萊，7年在史丹佛） 本書精鍊自史丹佛設計學院知名的生涯規畫課程，由兩名教授共同撰寫。歷經十幾年的實證，此課程的生命設計模式對於個人的改變相當有效，大幅降低焦慮感以及有關職涯、生命的錯誤迷思，能更有效地達到職業目標。作者教學經驗豐富，深知激勵人心的祕訣，將設計與生命觀點的共通性緊密串連。 ◎適用於各年齡層人士 課程內容經過濃縮，適用於不同的生命情境，簡易、實行度高。不論是對二十、四十、六十歲的人，剛踏入社會、轉換跑道、中年轉職或屆臨退休的人士，在生命的不同階段都有啟發性跟實用性。 ◎輕鬆解決一生中最重要的課題 在人的一生中，職涯成功與否、生命快不快樂，都是重要課題。然而，針對此課題，以及面臨生命走向的重大決定時，我們的教育系統幾乎沒提供相關的工具。本書用「設計思考」回答人生最具挑戰性的問題：「我這一生要做什麼？」展現在史丹佛開創、於矽谷發揚光大，嶄新又富創意的生命設計過程。 ◎矽谷頂尖設計團隊 本書作者的設計作品包含蘋果「老鼠」、第一台消費性筆電、雷射印表機、星際大戰動作人物等。比爾是史丹佛設計系的執行主任，也是蘋果Powerbook的行銷主管。戴夫則是史丹佛生命設計實驗室的共同主任，也是全世界最大的跨國性互動娛樂軟體公司「美商藝電」（Electronic Arts）的創辦人之一。 ◎設計師也熱愛問題 ●如何才能找到喜歡的工作？甚至是熱愛的工作？ ●如何才能打造讓我過著美好生活的事業？ ●如何平衡事業與家庭？ ●如何改變世界？ ●怎樣才能瘦到爆、性感，並且有錢到天怒人怨？ ◎生命設計的五種心態 ●好奇心 ●行動導向 ●重擬問題 ●覺察 ●通力合作 設計師靠著「設計思考」（design thinking）解決問題，帶來我們今日的世界。看一看辦公室，看一看家裡，手上那台平板、那支手機、坐著的那張椅子，生活中每一樣東西都源自設計，而每一個設計的起點，都是設計師或設計團隊想解決的問題。 本書作者比爾●柏內特（Bill Burnett）與戴夫●埃文斯（Dave Evans）讓我們瞭解，如何透過設計思考，創造出有意義又快樂的人生。不管是誰，身處何方，現在或先前的工作是什麼，目前多老或多年輕，都可以藉著那些帶來世上美妙科技、產品、空間的設計思考，打造專屬於自己的事業與生活，活出圓滿、有趣、創意無限、生產力十足、永遠有驚喜等在前方的人生。Whether you're 20, 40, 60 or older, many of us are still looking for an answer to that perennial question, 'What do I want to be when I grow up?' In Designing Your Life, Silicon Valley design innovators Bill Burnett and Dave Evans use their expertise to help you work out what you want -- and how to get it. Their phenomenally successful Life Design course has been tried and tested by thousands of people, from students to mid-career professionals to retirees contemplating a whole new future. Now in book form for the first time, their simple method will teach you how to use basic design tools to create a life that will work for you. Using lots of real-life stories and proven techniques like reframing, prototyping and mind-mapping you will learn how to build your way forwards, step-by-positive-step, to a life that's better by a design of your own making. Because a well-designed life means a life well-lived."
9789864766321,直擊產品設計新主流！掌握Autodesk新一代產品設計霸主Fusion 360的全方位核心技能，開啟直覺與簡單的設計模式，從入門到整合的實戰應用！從現在開始，更快速的學好Fusion 360！◎入門必備的Fusion 360關鍵技法涵蓋電腦繪圖、電腦輔助設計、產品設計、工業設計的基礎必修內容，如：草圖繪製與編輯、視覺化建模、零件組合…等內容，可搭配基礎功能影音教學，迅速掌握Fusion 360的入門要領，同時紮實指令應用技能。◎深入淺出的圖解步驟式導引沒有繁雜的文字說明，以最明確的圖解來說明觀念與用法，並以逐步示範的方式進行實作，進而快速學會Fusion 360的簡單設計模式。◎入門養成的快速化演練實例對於重要的繪製與修改指令，都有精確的講解，只要熟練書中的教學操作，就能盡快達到學校與職場要求的圖面設計與繪製能力。◎專業養成的整合設計試煉 提供曲線瓶、鋁合金輪圈、公仔產品設計作為整合實例，完整說明案例的實作流程，增加實務功力，並依Fusion 360認證考試方向提供模擬試題練習，以及因應3D列印需求提供快速轉換格式等內容。書附超值DVD內容：220分鐘基礎功能與關鍵影音教學/範例檔╱模擬試題解答
9789571192499,"本書的特色在於將幼兒園階段的課程與教學，透過能力指標內涵的分析與課程教學轉化的方式，提供幼兒園教師在教學設計與實施上的參考。
     本書的內容，包括幼兒園課程與教學設計基本模式與原理、課程與教學設計基本理念、課程與教學設計模式、課程與教學設計內容舉例等，並且依據上述理論與實務，提供五個主題方面的課程與教學活動設計，包括「寶貝上學趣」、「超級寶貝」、「超級麻吉—有你真好」、「就是愛地球」、「歡樂節慶趣」。希望本書的出版，提供從事幼兒工作的教師更多專業方面的思考，在課程與教學設計上更豐富的視野。"
9789864762279,"「我們往往太常以科技主導的方式來探討產品。但這本書是卻是從人的角度出發，從提出具有洞見的準則開始，逐步探討特定的設計模式，更提供練習案例幫助落實概念。」- 史考特．詹森 (Scott Jenson)／谷歌產品策略部 (Product Strategy, Google)要如何設計科技使其能融入使用者的生活，而不是被科技帶離生活？這本實用的書探索「平靜科技」的概念：科技在大部分的時候靜靜地待在背景，僅在必要的時機以溫和的方式引導使用者的注意力。你將會在本書中學到如何設計一件能簡易順暢地運作、導入、維護以及使用的產品，並維持低調不擾人的特性。作者安柏．凱斯在本書呈現了最早在全錄帕羅奧圖研究中心(Xerox PARC)的研究者所提出的概念，並闡述如何將此概念應用在當今科技版圖的方法，特別是在物聯網的領域。此為一本適合使用者經驗設計師、產品設計師、主管、創意總監與開發人員閱讀的理想書籍。你將會從本書學到：●將科技設計成懂得尊重人類注意力的重要性與設計挑戰●平靜科技的原則－包含外圍注意力、情境與周遭覺知●平靜科技的溝通模式－透過不同感官模式改善注意力●透過平靜科技改善現有產品的案例練習●針對企業與團隊的平靜科技原則與模式●起源於全錄帕羅奧圖研究中心的平靜科技歷史背景"
9789862137505,"自己的人生，自己設計！ 
終於，有一本書要教我們如何打造人生，更貼切的說法是「設計」人生。 任何年齡、任何人生階段都適用── 
◆歷經15年實證的課程（8年在柏克萊，7年在史丹佛） 本書精鍊自史丹佛設計學院知名的生涯規畫課程，由兩名教授共同撰寫。歷經十幾年的實證，此課程的生命設計模式對於個人的改變相當有效，大幅降低焦慮感以及有關職涯、生命的錯誤迷思，能更有效地達到職業目標。作者教學經驗豐富，深知激勵人心的祕訣，將設計與生命觀點的共通性緊密串連。 
◆適用於各年齡層人士 課程內容經過濃縮，適用於不同的生命情境，簡易、實行度高。不論是對二十、四十、六十歲的人，剛踏入社會、轉換跑道、中年轉職或屆臨退休的人士，在生命的不同階段都有啟發性跟實用性。 
◆輕鬆解決一生中最重要的課題 在人的一生中，職涯成功與否、生命快不快樂，都是重要課題。然而，針對此課題，以及面臨生命走向的重大決定時，我們的教育系統幾乎沒提供相關的工具。本書用「設計思考」回答人生最具挑戰性的問題：「我這一生要做什麼？」展現在史丹佛開創、於矽谷發揚光大，嶄新又富創意的生命設計過程。 
◆矽谷頂尖設計團隊 本書作者的設計作品包含蘋果「老鼠」、第一台消費性筆電、雷射印表機、星際大戰動作人物等。比爾是史丹佛設計系的執行主任，也是蘋果Powerbook的行銷主管。戴夫則是史丹佛生命設計實驗室的共同主任，也是全世界最大的跨國性互動娛樂軟體公司「美商藝電」（Electronic Arts）的創辦人之一。 
◎設計師也熱愛問題 
‧如何才能找到喜歡的工作？甚至是熱愛的工作？ ‧如何才能打造讓我過著美好生活的事業？ ‧如何平衡事業與家庭？ ‧如何改變世界？ ‧怎樣才能瘦到爆、性感，並且有錢到天怒人怨？ 
◎生命設計的五種心態 ‧好奇心 ‧行動導向 ‧重擬問題 ‧覺察 ‧通力合作 
設計師靠著「設計思考」（design thinking）解決問題，帶來我們今日的世界。看一看辦公室，看一看家裡，手上那台平板、那支手機、坐著的那張椅子，生活中每一樣東西都源自設計，而每一個設計的起點，都是設計師或設計團隊想解決的問題。 
本書作者比爾‧柏內特（Bill Burnett）與戴夫‧埃文斯（Dave Evans）讓我們瞭解，如何透過設計思考，創造出有意義又快樂的人生。不管是誰，身處何方，現在或先前的工作是什麼，目前多老或多年輕，都可以藉著那些帶來世上美妙科技、產品、空間的設計思考，打造專屬於自己的事業與生活，活出圓滿、有趣、創意無限、生產力十足、永遠有驚喜等在前方的人生。"
9789869311588,"由25年專業廚師經驗的MASA設計，營養師熱量精算，搭配十大超級食物，設計出100道防癌、抗老、熱量低又吃不胖，健康與美味並重的食譜。摒除一般市面上健康與減肥料理只能水煮、涼拌與與汆燙的設計模式，本書焗烤、濃湯、煎炸料理與甜點應有盡有，好吃營養又均衡，每道料理皆標示一人份熱量，絕對讓您吃得健康又安心。融合日式與西洋料理，2,000張照片Step by Step超強全圖解，仔細貼心，一看就懂。特色1：十大超級食材100道料理，2,000張照片步驟圖完全圖解，一看就會，即使是第一次下廚，也可以完全學會本書的所有菜色。特色2：每道料理都分享了MASA的設計理念與堅持，讓您不只學會做菜，更能體會、感受他的用心與貼心。特色3：菜色豐富多樣化，簡單實用，每道菜皆標示一人份熱量、烹調時間、難易度、份量、材料與做法等，還有作者的貼心小叮嚀喔！特色4：書後附有熱量排行榜與食材與相關料理一覽表，閱讀容易、貼心超實用，讓您一目瞭然，馬上就可以找到想要學習的各式料理，而且不會浪費任何食材。特色5：MASA 20多年專業廚師經驗認證，與橫跨全球各國粉絲應援團的支持與肯定，真心告訴您，下廚做菜絕對是「好玩＋快樂＋幸福」的事。◎十大超級食材分別是：蔬菜之王！營養師公認十大超級食物之首的「綠花椰菜」；叫我第一名，是蔬菜也是水果，茄紅素最多的「番茄」；大人小孩都喜歡，最受歡迎的甜蔬菜「高麗菜」；保護眼睛，防癌抗老養顏的最優食材「胡蘿蔔」；營養豐富，地球上熱量最低的食物之一「菠菜」；世界名藥，地球上最古老的超級藥用食材的「洋蔥和大蒜」；維生素含量豐富，是地球上最重要的抗氧化物之一的「柑橘類水果」（檸檬、柳橙、葡萄柚）；降低膽固醇，是最令人讚嘆的高油脂食材「酪梨」；超級抗氧化能力，讓您更長壽的「葡萄」；還有，強化記憶力，世界糧農組織最推薦五大健康水果之一的「莓類」（藍莓、草莓）。◎雖然以抗老防癌的蔬果食材為主，但也使用大量的肉類與海鮮入菜，料理更美味也更有滿足感。◎摒除健康與減肥料理只能水煮、涼拌與與汆燙的設計模式，本書中，焗烤、濃湯、煎炸料理與甜點應有盡有，好吃營養又均衡，而且每道料理皆標式一人份熱量（卡路里），並控制油脂與糖分的使用，讓您吃得健康又安心，享受美味不再有任何負擔。◎MASA以他的專業經驗，分享了各式各樣如何減低熱量的美味秘訣：如把料理與醬汁分別盛盤，想吃多少就加多少，可以隨時容易控制熱量的攝取；利用蔬菜泥與優格來增加湯品或料理的濃度，健康料理不再淡而無味等等。◎書中的每道料理，MASA也提供了許多材料表以外的建議食材，讓您可以隨時調整成自己喜歡的口味。"
9789864341382,◎精要論述新一代Visual C# 2015應用程式設計的語言新技術，如：nameof、字串插值、null條件運算子、索引初始設定式等。◎深入淺出介紹各章節學習目標，經典程式碼範例和圖文框程式碼說明，讓您易學易懂易用。◎完整Visual C#語法與基礎概念講解，讓您的視窗應用程式開發或ASP.NET網路應用程式設計無往不利。◎物件導向程式設計、精選設計模式(Design Pattern)C#程式範例，讓您在系統架構設計領域更上一層樓。◎平行運算完美攻略，全面提升您的程式運作效能。物件導向程式設計第1章到第10章為物件導向程式設計基礎章節，書中提供最經典的程式範例、圖文並茂、一語道破核心精要的章節內容，包括C#資料型別、程式流程控制、陣列、 字元與字串的使用、方法與參數的宣告方式，如何利用例外處理來捕捉訊息，以及OOP的重要應用，讓您學習C#語言事半功倍，協助您打好紮實深厚的C#基礎 功力。視窗應用程式設計第11章到第13章主要介紹常見的視窗應用程式設計所需瞭解的控制項用法與經典範例程式。然後介紹滑鼠與鍵盤的事件處理方式，讓您輕鬆設計完成所需的視窗應用程式開發。資料庫應用程式設計第14章和第15章針對資料庫應用程式設計提供全方位的連線存取技巧，讓您輕鬆從資料庫存取所需資訊，並且說明如何透過新技術LINQ的應用和加持，讓您輕鬆對於各種資料來源進行處理。系統程式架構設計第16章主要說明如何使用C#語言利用設計模式來協助我們開發更為彈性且完善的系統，引領我們邁向架構師之路。※各章節內容的範例說明，皆有詳細的程式解說、執行結果，舉例題材結合現今生活時事，靈活運用程式。※每章章末皆附有課後習題，題型包含選擇、問答、程式專案設計。豐富多元的題型練習，可以幫助讀者了解C#新技術的發展與增進相關知識。※ 隨書光碟內容收錄豐富，包含：1.程式範例檔—依照章節順序排列，搭配書中檔案說明，容易找到相關對應的程式 2.資料庫檔案—為本書所需用到的所有資料庫檔案 3.教學檔—存放本書有使用到教學步驟所設計出的動畫教學檔 4.附錄電子書—收錄本書所需應用程式的安裝指引與部署的pdf檔。
9789863756644,本書專注於Java應用程式的優化，深入分析軟體設計、程式碼、JVM虛擬基層面的優化方法，理論結合實際案例，讓您晉升頂尖程式設計師！Java是目前應用最為廣泛的軟體發展平臺，學習針對Java程式的優化方法有重要的意義。本書以Java性能調整優化為主線，有系統地闡述了與Java性能優化相關的知識與技巧。本書共6章，先後從軟體設計、軟體編碼、JVM調整優化以及程式故障排斥等方面介紹針對Java程式的優化方法。 第1章介紹性能的基本概念、定律、系統調整優化的過程和注意事項。 第2章從設計層面介紹與性能相關的設計模式、元件。 第3章從程式碼層面介紹如何編寫高效能的Java程式。 第4章介紹了並行開發和如何透過多執行緒提高系統性能。 第5章立足於JVM虛擬機器層面，介紹如何透過設定合理的JVM參數提升Java程式的性能。 第6章為工具篇，介紹了獲取和監控程式或系統性能指標的各種工具，包括相關的故障排查工具。本書適合所有Java程式設計師、軟體設計師、架構師以及軟體發展愛好者，對於有一定經驗的Java工程師，本書必能協助突破技術瓶頸、深入Java核心開發！
9789571180083,"因應我國於2014年8月正式實施「十二年國民基本教育」，教育部陸續公布《十二年國民基本教育課程發展指引》、《十二年國民基本教育課程綱要總綱》，本書全文包括課程的結構與意義、課程設計與課程研究、課程設計的理論取向意識型態、課程設計的模式、課程選擇、課程組織與統整、課程發展、課程實施與課程領導、課程評鑑、課程研究的回顧與展望等共十章。
　　特別説明「核心素養」的意義、課程結構與意義，說明「課程即經驗」、「課程即計畫」、「課程即目標」與「課程即研究假設」等五種課程現象與「核心素養」的課程設計與研究發展之意涵；指出精粹主義、經驗主義、社會主義、科技主義與專業主義等理論取向意識型態；說明目標模式、歷程模式、情境模式的課程設計；說明課程選擇的規準與課程選擇的原則；指出課程組織的要素、課程組織的原則、課程組織的類型與結構；指出教師教學本位的課程發展、國家政策本位的課程發展與行動研究本位的課程發展；指出課程實施與教師角色、課程實施的研究觀點、課程實施的探究主題與配套措施；說明課程評鑑的步驟與標準、評鑑的類型、評鑑的模式與課程評鑑的價值取向。第十章課程研究的回顧與展望—邁向課程學的建立，包括第一節課程研究的回顧與展望，第二節課程研究的再研究—邁向課程學的建立。"
9789881296788,"這是一個了不起的世界知名平面設計師家居設計模式集合，這些精美的作品涉及到家居的各個方面，包括床上用品，靠墊，沙發，牆紙，桌布，餐具，燈罩和家居飾品。我們相信，這將是視覺設計師，室內設計師，平面設計師一個很好的參考書籍。"
9789571177083,"""教學原理的內涵通常包含教學理論、教學設計、教學目標、教學策略、教學評量五項主題，本書在內容的安排方面，則著重在教學策略這個部分，將近幾年來新發展的教學法作詳細介紹。     本書內容分為五篇十六章，第一篇為緒論，探討教學的基本概念；第二篇為學習理論，包含學習理論與動機理論兩章；第三篇為教學計畫，內容共有四章，分別是教學設計模式、教學計畫、教學目標及教學評量；第四篇為教學技術，內容包含發問、討論、教學媒體、班級經營等四章；第五篇分為五章介紹重要教學模式，包含直接教學法、概念獲得、探究教學、合作學習、建構主義教學、問題本位教學及案例教學等。"""
9789862019405,"◎徹底了解Node的精髓—非同步程式設計模式
◎JavaScript透過Node.js進軍所有領域，這是成為一流程式設計師非看不可的關鍵內容
深入講解Node技術及實現原理 
完整呈現阿里巴巴第一線Node開發者的經驗
JavaScript是能執行於前後端的程式語言，伴隨著Java、PHP與.NET等伺服端技術的風行，以及與前端瀏覽器的JavaScript越來越重要相比，伺服端JavaScript逐漸式微，不過，伺服端JavaScript現在又回來了，因為Node已誕生。
市面上的Node書籍大多停留在Node的介紹或者框架、程式庫等使用層面的初階知識，而本書則將從不同的視角來介紹Node內在的特點和結構，適合已瞭解Node基本知識、想深入了解Node觀念的您來閱讀。

"
9789862019061,"這本書是一本C++的經典之作，為了讓台灣的讀者不會有遺珠之憾，博碩文化特地引進本書，並將之編為《名家名著》系列第05號書籍。兩位作者的來頭都不小(請見作者簡介)，而本書更是作者十年磨一劍的經典之作。

作者Koenig在C++的整個發展過程中具有舉足輕重的地位，是C++社群中最受尊敬的大師之一。他的文章以樸實而又精深的思想，準確而又權威的論述，，成為業界公認的『正統C++之聲』。本書命名為《Ruminations on C++》充分顯現出作者的自信和對這本書的珍愛。

本書命名為《C++沉思錄》，顧名思義，這是一本需要多加思考的書籍。作者在書中不斷強調『想一想』這件事，從思考的過程中，逐漸發展出具有實用性的C++程式。就內容來看，這本書其實也可以命名為《C++設計模式》、《Thinking in C++》、《C++及STL的設計和演化》。

這是一本進階書，對於初學C++的人來說並不適合。但對於已經學會C++語法，有過一小段撰寫C++程式經歷的人來說，本書有助於理解要怎樣才算是用對了C++來設計程式、為何C++要如此設計、STL當中的奧秘（例如iterator為何要如此設計）。

在本書的範例程式碼中，作者從簡單的問題開始設計起，逐步擴充解決更多的問題，考慮周詳，並且充分應用了C++特有的功能（相對於Java而言），特別是指標、運算子overload、friend等等的技術，這也是C++之所以複雜龐大的主因，然而既然選擇了C++作為開發工具，並因此付出了更多的學習時間，若不將之應用出來，就太可惜了。讓我們來看看大師是如何充分應用各種C++的技巧來解決問題。

這本書在C++的教學方式上有獨到之妙。作者循循善誘，娓娓道來，所舉的例子雖然小，但是非常典型，切中要害，讓你花費不大的精力就可以掌握相當多的東西。

這本書與坊間大部分的C++書籍都不一樣，那些書所關注的是語言本身，而不是如何運用這種語言。

作者對C++有著居高臨下的見識，對於C++的設計理念和實際應用有非常清晰的觀點。眾多紛繁複雜的C++特性如何組合運用，如何有效運作，什麼是主流，什麼是旁支，哪些是通用技術，哪些是特殊的技巧，在書中都有清晰明白的介紹。

識字最多的人，一定是最好的作家嗎？能演奏最多音符的人，一定是最好的音樂家嗎？那些瞭解最多語言特性的人就是最好的程式設計師(這真是荒謬)。程式設計工作中最困難的部分並不是去學習語言細節，而是理解問題的解決之道。

作者希望讀者能運用這些idea 去理解一堆拼湊的程式碼與一個抽象之間的差別──這種差別，就好像一堆辭藻與一篇文章、一堆音符與一支歌曲的差別一樣。C++支援好幾種不同的抽象形式，其中最著名的有抽象資料型態（ADT）、物件導向程式設計和泛型程式設計。

全書多次強調，C++最基本的設計理念是用類別來表示概念，C++解決複雜性的基本原則是抽象，物件導向思想是C++的手段之一，而不是全部等等。這些言論可以說是擲地有聲，可引導許多C++程式設計師走向正確的道路。

如果你是C++的高手，請試著讀讀本書，看看你能理解多少?多快理解?或許你會發現，原來要掌握博大精深的C++，並非麼簡單。

如果您只是個剛學會C++的程式設計師，相信看完本書後，一定會發出『原來C++可以這樣做啊！』、『原來程式庫是這樣寫的啊！』、『原來遇到問題要這樣解決啊！』等等數不完的讚嘆之聲！


大師的推薦
Koenig和Moo的《C++沉思錄》將會為許多人提供有用的幫助，對於C++究竟是什麼，以及能夠做些什麼，他們的先見之明，在這本書中隨處可見。
——C++發明人 Bjarne Stroustrup

對我來說，這是我所有C++藏書中最好的一本。
——《C & C++ Code Capsules》作者 Chuck Allison"
9789862019146,●從基礎系統概論到專案管理來進行系統分析與設計，輕鬆管控專案進度與建立相關所需文件。●精要剖析Microsoft報表設計方式，快速建立專業報表。●進銷存系統開發使用Visual Studio最新技術，包含LINQ、平行處理和非同步處理等。●進銷存系統設計結合My物件(ASP.NET亦適用)、物件導向程式設計、設計模式(Design Pattern)，引領您邁向更進階的架構師之路。●超實用系統功能實作，包括：權限管理系統、登錄檔資訊存取機制、系統註冊機制、序號產生器、系統自動更新機制、資料庫圖片存取機制、資料庫備份與還原機制等，一次滿足系統開發的多樣需求。●隨書附上完整的進銷存系統專案程式碼，除了讓您免費使用系統，更讓您可客製化為更合用的進銷存系統，超值的絕學與密技等您來探索。
9789863470731,第三版特別涵蓋 Windows Phone 專案讓你的物件充分運用抽象化與繼承的強大威力C#、XAML 與 .NET 編程實務的學習指南探索 MVVM（Model-View-ViewModel）設計模式的絕妙奧義『假如你想要以趣味橫生的方式深入學習 C#，這本書正是為你量身訂製的。』— Andy Parker，C# 程式設計新手『《深入淺出 C#》將引領各種背景的初學者一窺 C# 與 .NET Framework 的堂奧，並與之建立一段富有成效的長遠關係。』— Chris Burrows，Microsoft C# Compiler 團隊的開發者『《深入淺出 C#》讓我馬上能夠充分掌控我的第一個大型 C# 開發專案 — 讚啦，強力推薦。』— Shalewa Odusanya，Technical Account Manager，Google你將從本書學到什麼？《深入淺出 C#》是一段有關以 C#、XAML、.NET Framework 與 Visual Studio IDE 進行編程的完整學習體驗。本書專為你的大腦量身訂製，從第一章開始便讓你充分融入，全心參與，在當中，你將打造一支功能完整的電玩遊戲。之後，你會學到有關類別與物件導向編程、繪製圖形與動畫、使用 LINQ 查詢資料以及將資料序列化到檔案的一切知識。另外，你將透過建造真實專案、實際打造遊戲及解決謎題來學習各種知識。完成本書閱讀之際，你將成為一位值得信賴的 C# 程式設計師，並且能夠充分地享受這項工作所帶來的樂趣。這本書為何如此與眾不同？我們認為你的時間寶貴，不應該將它浪費在與新概念周旋不下的窘境中。運用認知科學與學習理論的最新研究成果，《深入淺出 C#》採取專為大腦運作而設計的豐富視覺化風格，而不是令你昏昏欲睡的冗贅敘述。
9789862018910,◎精要論述新一代Visual Basic 2013應用程式設計的語言新技術，如：平行運算、非同步作業等。◎完整Visual Basic語法與基礎概念講解，讓您的視窗應用程式開發或ASP.NET網路應用程式設計無往不利。◎My物件、物件導向程式設計、設計模式(Design Pattern)經典Visual Basic程式範例，引領您邁向架構師之路。◎最新Windows市集應用程式開發講解，讓您迅速掌握最新作業系統Windows 8.1 App程式開發技巧。◎深入淺出介紹各章節學習目標，經典程式碼範例和圖文框程式碼說明，易學易懂易用。◎平行運算完美攻略，全面提升您的程式運作效能。物件導向程式設計第1章到第10章為物件導向程式設計的基礎章節，重點在於瞭解什麼是.NET、.NET Framework 4.5.1和VB，並對Visual Basic 2013的進化過程、特色及新增功能詳加介紹。更藉由程式範例介紹VB資料型別宣告、程式流程控制、陣列、字元與字串的使用、方法與參數的宣告方式，如何利用例外處理來捕捉訊息，以及OOP的重要應用。視窗應用程式設計第11章到第14章介紹Visual Basic 2013的一般控制項，透過講解每個控制項的特性及使用時機，並解說其常用的屬性、方法、事件，搭配生活化的範例，讓您快速了解控制項的基本操作與應用。另外講述MessageBox類別，介紹Windows市集應用程式的開發和XAML語法介紹；最後說明視窗事件的概念與使用方法。資料庫應用程式設計第15章到第16章介紹ADO.NET的重要功能：LINQ、ADO.NET Entity Framework、概念模型的外部索引鍵、新的N層式架構應用程式開發方法等。說明.NET Framework Data Provider與DataSet物件；Visual Basic 2013與Access、SQL Server 的資料庫管理連線方式，以及講解LINQ to ADO.NET(LINQ to SQL和LINQ to DataSet)，以及LINQ to Objects和LINQ to XML，讓您活用各種LINQ技術。系統程式架構設計第17章介紹在一般開發系統時最常使用的設計模式(Design Pattern)種類，包括：獨體、策略、工廠、觀察者、轉接器、裝飾、命令、控制反轉模式和表象模式等，透過這些模式的瞭解來解決程式架構設計上最常見的難題。各章節內容的範例說明，皆有詳細的程式解說、執行結果，舉例題材結合現今生活時事，靈活運用程式。每章章末皆附有課後習題，題型包含選擇、問答、程式專案設計。豐富多元的題型練習，可以幫助讀者了解VB新技術的發展與增進相關知識。隨書光碟內容收錄豐富，包含：1.程式範例檔—依照章節順序排列，搭配書中檔案說明，容易找到相關對應的程式 2.資料庫檔案—為本書所需用到的所有資料庫檔案 3.教學檔—存放本書有使用到教學步驟所設計出的動畫教學檔 4.附錄電子書—收錄本書所需應用程式的安裝指引與部署的pdf檔。
9789862018606,◎精要論述新一代Visual C# 2013應用程式設計的語言新技術：平行運算、非同步作業等。◎完整Visual C#語法與基礎概念講解，讓您的視窗應用程式開發或ASP.NET網路應用程式設計無往不利。◎物件導向程式設計、精選設計模式(Design Pattern)C#程式範例，讓您在系統架構設計領域更上一層樓。◎最新Windows市集應用程式開發講解，迅速掌握最新作業系統Windows 8.1程式開發技巧。◎深入淺出介紹各章節學習目標，經典程式碼範例和圖文框程式碼說明，易學易懂易用。◎平行運算完美攻略，全面提升程式運作效能。物件導向程式設計第 1章到第10章為物件導向程式設計的基礎章節，重點在於瞭解什麼是.NET、.NET Framework 4.5.1和C#，並對Visual C# 2013的進化過程、特色及新增功能詳加介紹。更藉由程式範例介紹C#資料型別宣告、程式流程控制、陣列、字元與字串的使用、方法與參數的宣告方式，如何利用例外處理來捕捉訊息，以及OOP的重要應用。視窗應用程式設計第 11章到第14章介紹Visual C# 2013的一般控制項，透過講解每個控制項的特性及使用時機，並解說其常用的屬性、方法、事件，搭配生活化的範例，讓您快速了解控制項的基本操作與應用。另外講述MessageBox類別，介紹Windows 市集應用程式的開發和XAML語法介紹；最後說明視窗事件的概念與使用方法。資料庫應用程式設計第 15章到第16章介紹ADO.NET的重要功能：LINQ、ADO.NET Entity Framework、概念模型的外部索引鍵、新的N層式架構應用程式開發方法等。說明.NET Framework Data Provider與DataSet物件；Visual C# 2013與Access、SQL Server 的資料庫管理連線方式，以及講解LINQ to ADO.NET(LINQ to SQL和LINQ to DataSet)，以及LINQ to Objects和LINQ to XML，讓您活用各種LINQ技術。系統程式架構設計第17章介紹在一般開發系統時最常使用的設計模式(Design Pattern)種類，包括：獨體、策略、工廠、觀察者、轉接器、裝飾、命令、控制反轉模式和表象模式等，透過這些模式的瞭解來解決程式架構設計上最常見的難題。※各章節內容的範例說明，皆有詳細的程式解說、執行結果，舉例題材結合現今生活時事，靈活運用程式。※每章章末皆附有課後習題，題型包含選擇、問答、程式專案設計。豐富多元的題型練習，可以幫助讀者了解C#新技術的發展與增進相關知識。※ 隨書光碟內容收錄豐富，包含：1.程式範例檔—依照章節順序排列，搭配書中檔案說明，容易找到相關對應的程式 2.資料庫檔案—為本書所需用到的所有資料庫檔案 3.教學檔—存放本書有使用到教學步驟所設計出的動畫教學檔 4.附錄電子書—收錄本書所需應用程式的安裝指引與部署的pdf檔。
9789862769522,觸及 iPhone、Android、BlackBerry、Windows Phone 等行動平台使用者‧瞭解使用 HTML5、CSS、JavaScipt 與響應技術來建構行動網站與 app 的細節與陷阱‧在觸控設備與具備各種解析度的螢幕上建構實用的使用者介面‧瞭解 iOS、Android、Windows Phone、BlackBerry、Firefox OS 與其他行動平台之間的差異‧創建不需要使用瀏覽器的本機 web app、電子書與 PhoneGap 應用程式‧建構可在瀏覽器使用，或可在線上商店發表的 app，例如 App Store、Google Play Store、Windows Store 與 App World 等行動 app 的市場正以驚人的速度進化當中，本書正是最完整的行動 web 參考書籍。在這本暢銷書的第二版之中，你可以學到如何以 HMTL5 與 CSS3 來建構 app，並且使用現代智慧型手機、平板與功能型手機常見的功能，例如：地理定位、加速度計、多點觸控螢幕、離線存放空間等。行動開發專家 Maximiliano Firtman 將會教導你開發標準的 app 核心，並且讓你將工作成果延伸到特定的設備。這本新版書籍包含許多近來行動開發領域的新技術，包括響應式 web 設計技術、離線存放空間、行動設計模式，以及新型的行動瀏覽器、平台與硬體 API。
9789862018088,"「Kent Beck」是何許人也？，他可以說是大師中的大師。(詳見作者介紹)
「實作模式(Implementation Patterns)」指的是什麼？Patterns 是一種習慣，一種整理過的設計方式，當遇到同類問題時，就可以套用上去。Implementation簡單說，就是Coding。這本書是Kent Beck 把他自己在寫程式時的習慣，整理成77 個Patterns，讓大家來參考看看。讓我們來看看其他專家是如何看待這本書的
"
9789862763117,搜尋是我們這個時代最具影響力的創新之一。它對我們買些什麼以及去向何處都造成影響。它也決定我們如何學習以及該相信什麼。在這本深具啟發性的書中，各位將探索應用於網路、電子商務、企業、桌上型系統、行動裝置、社群以及即時搜尋與發現上的設計模式。透過彩色插圖與範例，本書把現代資訊檢索帶入日常生活之中，其內容涵蓋不同主題。例如，相關性、多層面導覽、多點觸控、個人化、視覺化、多感官搜尋、以及擴增實境。藉由作者自身經驗以及最佳方案與經過實驗證實之研究，這本書不只提供能建立有效搜尋服務之實用指南，同時也嘗試引導您想像未來的搜尋服務。不論您是否從事網路相關行業、行動服務設計師、搜尋服務商，或只是對這個主題感興趣，各位都將發現本書內容不僅有用也具有啟發性。．找出融合了使用者心理與行為、資訊架構、互動設計、以及新興科技的搜尋模式語言。．提昇企業效率與電子商務營業額．協助行動裝置使用者達成目標、完成工作、以及完成搜尋．促進搜尋介面與應用的設計創新 
9789866348501,如果你只是聽聞太多關於雲端的傳說，還不曾親身踏上體驗… 由重量級資深程式架構師來探討Microsoft Windows Azure針對雲端運算的解決方案。從觀念建立到程式實例解說，是兼具雲端程式架構與設計模式的導讀書籍，更是開發人員首度踏上雲端運算的最佳指引。 以Microsoft雲端的三大架構為主軸，分別闡述Windows Azure（雲端運算架構）、SQL Azure（雲端資料庫服務）、AppFabric（雲端服務）的原則及內容，並引導開發人員以全新視野、全新格局及全新思維來檢視軟體設計模式及軟體測試。 ◎ Windows Azure 說明Windows Azure應用程式架構及其資料模式（Blob、Table、Queue、Drive），以及完整的應用程式部署過程。 ◎ SQL Azure 講述SQL Azure的資料結構及其設計模式，並示範如何將既有資料轉換至雲端的資料庫服務，以及同步雲端資料的重要性。 ◎AppFabric 包含Access Control Service（存取權限控制服務）及Service Bus（服務匯流排）兩大項，並以完整範例解析兩項服務的功能與成效。 
9789862013090,"當高深的程式設計思想遇到個性鮮明的標點符號，一場精彩又深入淺出的課程就此展開…本書共有十三個章節，前六章為上篇，後七章為下篇。上篇以程式設計範式為出發點，深入分析各種程式語言的本質、特性、意義、優缺點，破除一般人對於程式語言的迷思。下篇則以抽象機制為出發點，徹底剖析物件導向程式設計的三大特性－封裝、繼承、多型，引領讀者真正掌握OOP的思考術，並將這些觀念延伸到設計原則與設計模式中。冒號語錄：◎學會不如會學，會學不如會用，會用不如被用。◎知識之上是思想，思想之上是精神。◎設計模式是軟體的戰術思想，架構是軟體的戰略決策。◎程式設計是尋求一種機制，將指定的輸入轉化為指定的輸出。◎與其說OOP更具重用性，不如說更具易用性。◎抽象與分解是治癒程式碼紊亂、鬆散、重複的良方。◎獨立是非同步的前提，耗時是非同步的理由。◎程式設計範式為神，程式語言為形，應以神導形、以形傳神。◎介面是綱，實作是目，綱若不舉，目無以張。◎抽象是OOP的核心和起源，是封裝、繼承和多型的基礎。◎存取控制不僅是一種語法限制，也是一種語意規範，明確地將介面與實作分離開來。◎實作繼承消費可重用的舊程式碼，介面繼承生產可重用的新程式碼。◎概念抽象只是手段，規範抽象才是依據。◎繼承是多型的基礎，多型是繼承的目的。◎抽象是尋求某種一致性的過程，反過來遵循一致性也有助於抽象的形成。"
9789867809483,設計產業為了要挑戰前瞻市場，需開發出能夠吸引前端市場關注的概念商品。在當前注重人性及訴求情感的研發趨勢中，設計者常要將無形的需求轉化為有形產品。然而產品有形，欲求與需要聯想來加以喚醒。設計者需思索，透過怎樣的聯想才會觸動那個隱藏於人心的期待呢?本書以作者長期從事設計之心得與教學經驗，萃取文獻理論以檢視設計製作，並藉由六個章節，逐層提出連結心理喚醒造型聯想之設計模式。透過本書各張之間不同的切入方式，所呈現出設計者對不同設計案例的詮釋方式與溝通表現，將有助於後續的設計者，援引方法參酌應用與其設計構思中，逐步引發設計者作出更具情感特質的概念產品。 
9783937718682,"誰不想慵懶躺在熱帶微風中打盹？誰不想要擁有一個可以放鬆的熱帶空間？熱帶風情，感覺總是熱情洋溢，也就是這些位於赤道的熱帶國家給我們的感覺，這些國家卻也因為位置的不同有不同的設計模式，相當多的熱帶風格其實都受到歐洲古典建築風格的影嚮，並且還要適應當地的氣候與建築材料的尋找而呈現不同風格。《Tropical Design》書中提供了相當多熱帶風格的設計案例，其中不乏相當多的名家設計案例，包括了Legoretta+Legoretta雷可瑞塔父子設計位於墨西哥的"" Las Terrazas"" 、馬爾地夫群島浪漫的""Anantara""、Biselli  Katchborian融合了摩登與熱帶風格的""LPVM House"" 等令人想要立刻打包前往的熱帶風格建築。假如你厭煩了疏離且僵化的都市生活，這書中的熱帶夢土可是你的理想天堂。
【96年4月好讀推薦】熱帶風格不僅是種已經確立的建築風格，它的多樣面貌也恰好回應建築所在地域的氣候特徵，本書羅列有Legoretta+Legoretta 父子檔在墨西哥豔陽下的Las Terrazas ，馬爾地夫島的浪漫度假村Anantara，Biselli+Katchborian建築師事務所位於巴西的LPVM House 等等，展現環繞赤道各地區的不同風情。"
,"封面故事USB4擴充商機USB4於2021年進入市場推廣期，該標準藉由Type-C單一連接埠整合更多傳輸介面，可以完成高速資料傳輸、高畫質影音與充電等，同時承襲USB技術簡單易用的特點，NB、PC、Tablet等平台將成為推動核心，以USB4 Hub與Docking為導入產品。 USB4的高速傳輸讓測試認證與纜線、連接器、電路板的設計更為重要，USB一致性測試驗證功能達成率，互通性測試則驗證不同廠商產品間的互連互通；但一致性測試有測項複雜、測試時間長、成本高等問題，互通性測試則因疫情大量取消工作會議。現階段USB4發展重點應將效能做到更穩定，提升互通性並致力降低關鍵元件與系統模組成本，同時應強化纜線、連接器、電路板的精準設計，達成高速訊號完整性的目標。  雜誌目錄*焦點全搜密處理器全面力挺　USB4搶進筆電/平板擴充座商機維持高速訊號完整性　USB4測試驗證面面俱到協同纜線/連接器/電路板　系統級整合突破USB高速障壁 *技術博學堂牽動全球無線通訊產業發展　WRC-19頻譜分配決議備受矚目解決認證難度/量產品質　連接器決定高頻傳輸性能水準強制諧振減少MOSFET切換損耗　ZVS控制器優化快充供電巢套架構優於串接　雙PLL消除時脈應用相位雜訊AI深度學習推論處理生力軍　TSP晶片架構技術獨樹一幟搶進邊緣人工智慧領域　類比運算挾高性價比掀起旋風mPoE相容新舊標準　最新乙太網供電實現高效互通量身整合製造業特規系統　5G專網造就中控式關燈工廠 *趨勢大追擊高速低延遲時代來臨　Wi-Fi 6帶動新一波無線創新(上)開發設計對應熱門需求　監控系統引領智慧城市商機逆勢激發開箱即用IoT平台　疫情加速物聯網普及發揮元件運籌/規模優勢　大盤商力助客戶共度缺料難關  新通訊元件雜誌簡介本雜誌完整涵括通訊各個領域，Telecom及Datacom並重，為您清楚剖析未來Telecom及Datacom的發展及整合趨勢。本雜誌除邀請專業人士執筆，為讀者提供最新產業趨勢及技術發展外，並透過採訪報導，協助您掌握台灣及全球通訊業界的最新動態。「新通訊元件雜誌」已經以紮實的內容，輔以研討會或座談會的舉辦，在產研學界建立其知名度、口碑及影響力。更多資訊請參考：http://www.2cm.com.tw/index.asp"
