ISBN,書籍簡介
9781718501447,"A a thorough, practice-based introduction to WebAssembly. Learn how to create high-performing, lightning-fast websites and applications.  WebAssembly is the fast, compact, portable technology that optimizes the performance of resource-intensive web applications and programs. The Art of WebAssembly is designed to give web developers a solid understanding of how it works, when to use it (and when not to), and how to develop and deploy WebAssembly apps. First you'll learn how to optimize and compile low-level code, debug and evaluate WebAssembly, and represent WebAssembly in the human-readable WebAssembly Text (WAT) format. Once you have the basics down, you'll build a browser-based collision detection program, work with browser rendering technologies to create graphics and animations, and see how WebAssembly interacts with other web languages. You'll also learn how to:  - Embed WebAssembly applications in web browsers and Node.js - Use browser debuggers to evaluate your WebAssembly code - Format variables, loops, functions, strings, data structures, and conditional logic in WAT - Manipulate memory - Build a program that generates graphical objects and detects when they collide - Evaluate the output of a WebAssembly compiler The Art of WebAssembly will help you make sense of this powerful technology to boost the performance of your web applications."
9798600962903,0
9781617295744,"""Atwood's Law"" is driven by the idea that all applications will ultimately wind up on the web and therefore must be written in JavaScript. WebAssembly may be your way out  With WebAssembly, you can write in nearly any modern language and run your code in the browser through a memory-safe, sandboxed execution environment that can be embedded in a web browser and other platforms.  Getting set up and moving with WebAssembly requires you to modify your web dev process; WebAssembly in Action will get you started quickly and guide you through real-world examples and detailed diagrams that help you create, run, and debug WebAssembly modules.  Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications."
9781680506365,"WebAssembly fulfills the long-awaited promise of web technologies: fast code, type-safe at compile time, execution in the browser, on embedded devices, or anywhere else. Rust delivers the power of C in a language that strictly enforces type safety. Combine both languages and you can write for the web like never before  Learn how to integrate with JavaScript, run code on platforms other than the browser, and take a step into IoT. Discover the easy way to build cross-platform applications without sacrificing power, and change the way you write code for the web. WebAssembly is more than just a revolutionary new technology. It's reshaping how we build applications for the web and beyond. Where technologies like ActiveX and Flash have failed, you can now write code in whatever language you prefer and compile to WebAssembly for fast, type-safe code that runs in the browser, on mobile devices, embedded devices, and more. Combining WebAssembly's portable, high-performance modules with Rust's safety and power is a perfect development combination. Learn how WebAssembly's stack machine architecture works, install low-level wasm tools, and discover the dark art of writing raw wast code. Build on that foundation and learn how to compile WebAssembly modules from Rust by implementing the logic for a checkers game. Create wasm modules in Rust to interoperate with JavaScript in many compelling ways. Apply your new skills to the world of non-web hosts, and create everything from an app running on a Raspberry Pi that controls a lighting system, to a fully-functioning online multiplayer game engine where developers upload their own arena-bound WebAssembly combat modules. Get started with WebAssembly today, and change the way you think about the web. What You Need:  You'll need a Linux, Mac, or Windows workstation with an Internet connection. You'll need an up-to-date web browser that supports WebAssembly. To work with the sample code, you can use your favorite text editor or IDE. The book will guide you through installing the Rust and WebAssembly tools needed for each chapter."
9781788997379,0
9781789346220,0
9781838644659,0
9789869772617,程式語言千百種，每種都宣稱自己最棒，但JAVA、C仍然橫行霸道。然後在RUST出現之後，生而快速、優雅、穩固、平行執行的DNA讓這個新興的語言立即席捲市場。包括了新的Mozilla核心Servo、新一代的OS Redox以及乙太幣的虛擬機Parity都是用RUST開發的。學會一門新的語言等於開啟一個全新的視野，千千萬萬的程式語言，RUST一定是你最好的自我投資。 目前Rust被陸續應用在區塊鏈、遊戲、WebAssembly技術、機器學習、分散式資料庫、網路服務基礎設施、Web架構、作業系統和嵌入式等領域。時代在變化，未來的網際網路需要的是安全和效能並重的語言，Rust必然會在其中大放異彩。 Rust語言融合了多種語言特性和多種程式設計範式。這就表示，Rust有關的知識範圍非常廣泛，涵蓋了物件導向、函數式、泛型、底層記憶體管理、類型系統、設計模式等知識。從底層到上層抽象，從模式到工程化穩固性，無所不包。可以說，Rust是程式語言發展至今的集大成者。 ●設計哲學：探索Rust語言的內在一致性。了解Rust語言的設計哲學，有助把握Rust語言的核心與一致性，把Rust看似紛繁複雜的特性都系統地串起來。●原始程式：Rust是一種自舉的語言，Rust語言由Rust本身實現。透過閱讀Rust標準函數庫和一些協力廠商函數庫的原始程式，不僅可以深入了解Rust提供的資料類型和資料結構，更能體驗和學習道地的Rust程式設計風格。●工程角度：Rust透過類型系統、斷言、錯誤處理等機制保障記憶體安全的同時，還確保了系統的穩固性。●底層原理：探索Rust記憶體安全的本質，可以進一步了解Rust的類型系統，以及Unsafe Rust存在的必要性。
